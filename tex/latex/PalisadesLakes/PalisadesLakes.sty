%-----------------------------------------------------------------
% PalisadesLakes --- latex defs for palisades-lakes projects.
% https://github.com/palisades-lakes
% palisades-lakes at gmail dot com
% no guarantees or support.
% no copyright or license (yet).
%-----------------------------------------------------------------
% not bothering with dtx (formatted documentation):
%  extra processing step not worth while,
%    especially in development.
%  dtx format not supported by texlipse
%  package intended for 'internal', unsupported use only.
%  latex + comments is readable enough.
%
% Note well: this is my first attempt at a latex class.
%
% This is an experiment;
% the idea is to capture most of what I want in one package,
% rather than having dependencies on hundreds of other latex
% packages that often conflict, and, in particular, 
% often conflict in ways that make it difficult to tell
% where the problem is. 
%
% For \url{https://github.com/palisades-lakes}.
%
% General idea: document is a collection of chunks (better word?)
% containing paragraph text, math notation, formatted code, 
% graphics, tables, etc.. 
% Document layout determines where and how each chunk is rendered.
% This should be done to minimize a cost subject to constraints.
% The constraints include ordering (chunk A before chunk B),
% alignment (eg margin notes aligned to body text, 
% side-by-side figures, tables, etc.),
% and more complex constraints for math notation and labeled
% graphics. 
%-----------------------------------------------------------------

\NeedsTeXFormat {LaTeX2e} [2020-10-01]
\ProvidesPackage{PalisadesLakes}[2021-02-05]

\errorcontextlines 10000

%-----------------------------------------------------------------
% package options
%-----------------------------------------------------------------

% none at present

% TODO: control printing of list of listings, etc., with package
% options rather than toggles?

\DeclareOption*{\PackageWarning{PalisadesLakes}%
%\DeclareOption*{\PackageError{PalisadesLakes}%
{Unknown option ‘\CurrentOption’}}
\ProcessOptions\relax

%-----------------------------------------------------------------
% general dependencies
%-----------------------------------------------------------------
\RequirePackage{etoolbox}[2020/10/05]
\RequirePackage{expl3}[2020/10/27]
\RequirePackage{xparse}[2020/10/27]
\RequirePackage{import}[2020/04/01]
% Work-around for tex limit to 16 open output files.
\RequirePackage{morewrites}[2018/12/29]
\RequirePackage[dvipsnames,svgnames,x11names,rgb]{xcolor}
[2016/05/11]
\definecolor{citecolor}{rgb}{0.05,0.3,0.05}
\RequirePackage{graphicx}[2020/09/09]
% TODO: is ulem needed?
%\PassOptionsToPackage{normalem}{ulem}
%\RequirePackage{ulem}[2019/11/18]
\RequirePackage{url}[2013/09/16]
 % just for babel:
\RequirePackage{csquotes}[2019-12-06]
\RequirePackage[english]{babel}[2020/10/27]
% category theory diagrams
\RequirePackage{tikz-cd}[2018/11/19]
%-----------------------------------------------------------------
% date/time formatting
%-----------------------------------------------------------------
\RequirePackage{datetime}[2015/03/20]
\renewcommand{\dateseparator}{-}
\renewcommand{\today}{
\the\year \dateseparator \twodigit\month \dateseparator \twodigit\day}
%-----------------------------------------------------------------
% geometry commands --- make it easy to switch page layouts
%-----------------------------------------------------------------
\RequirePackage{geometry}[2020/01/02]

\NewDocumentCommand {\geomDefault} {} {
 \geometry{twoside=false,margin=2cm,columnsep=2.5cm,} }

\NewDocumentCommand {\geomKindlePaperWhite} {} {
 \geomDefault
 \geometry{margin=2mm,paperheight=160mm,paperwidth=120mm,
           twocolumn=false,landscape=false,} }

\NewDocumentCommand {\geomLegal} {} {
 \geomDefault
 \geometry{margin=2cm,paperheight=356mm,paperwidth=216mm,} }
\NewDocumentCommand {\geomLetter} {} {
 \geomDefault
 \geometry{margin=2cm,paperheight=279mm,paperwidth=216mm,} }
\NewDocumentCommand {\geomLedger} {} {
 \geomDefault
 \geometry{margin=2cm,paperheight=432mm,paperwidth=279mm,} }
\NewDocumentCommand {\geomAfour} {} {
 \geomDefault
 \geometry{margin=2cm,paperheight=297mm,paperwidth=210mm,} }
\NewDocumentCommand {\geomHDTV} {} {
 \geomDefault
 \geometry{margin=2cm,paperheight=352mm,paperwidth=198mm,} }

% roughly half a screen, intended for
% single column portrait, either occupying 1/3 to 1/2 the screen or
% 2 page side by side full screen.
\NewDocumentCommand {\geomHalfDTV} {} {
 \hypersetup{pdfpagelayout=TwoPageLeft,}
 \geomDefault
 \geometry{margin=2cm,paperheight=200mm,paperwidth=170mm,} }

% rough size and aspect for traditional math books
% TODO: margins should be bigger and two-sided assymetric
\NewDocumentCommand {\geomTextbook} {} {
 \geomDefault
 \geometry{margin=2cm,paperheight=220mm,paperwidth=150mm,} }

\NewDocumentCommand {\geomLandscape} {} {
 \geometry{twocolumn=true,landscape=true,} }
\NewDocumentCommand {\geomPortraitTwoColumn} {} {
 \geometry{twocolumn=true,landscape=false,columnsep=2.0cm,} }
\NewDocumentCommand {\geomPortraitOneColumn} {} {
 \geometry{twocolumn=false,landscape=false,} }

%-----------------------------------------------------------------
\setlength{\parskip}{4pt}
\setlength{\parindent}{0pt}
\RequirePackage[parfill]{parskip}[2020-06-15]
\setlength{\parskip}{4pt}
\setlength{\parindent}{0pt}
%-----------------------------------------------------------------
% fonts
%-----------------------------------------------------------------
\RequirePackage[quiet]{fontspec}[2020/02/21]
%\defaultfontfeatures{Scale=MatchLowercase}
%-----------------------------------------------------------------
% unicode-math
%-----------------------------------------------------------------
% As of 2021-03-16, I am defaulting to 'upright' math text.
% I am considering trying sans symbols as the default as well,
% but I'm not sure if the existing sans math fonts are as well
% developed as the others, especially for non-letter symbols.
%
% Goals are:
%
% (1) readability (at least subjectively), Prefer top-down over
%     bottom-up understanding. In particular, it should be easy to
%     pick out the general structure of an expression, ignoring
%     less important details.
% 
% (2) general appearance should be something like regularized,
%     cleaned up, good handwriting. To me this suggests upright
%     sans letters and compatible symbols.
%
% (3) math expressions should be visually distinct from regular
%     text, especially when mixed together --- but not so much
%     that it disturbs the flow of reading. To me, this suggests
%     serif fonts for text and, agina, sans for math, upright
%     for both, and restraint in weight variation.
%
% I am aware of ISO 80000-2:2019, but haven't read it, 
% since the price is about US$170 and I doubt I would agree with
% their choices. Indirect sources suggest that in ISO 80000-2
% most symbols are set in italic, which I find difficult to read,
% and believe should be resticted, if used at all, to placing
% emphasis on very short pieces of text, on the order of a word
% or short phrase. 
% And even in that case, and contrary to most
% advice I've seen, I prefer slanted faces to italic. 
% My subjective feeling is that italic text,
% in most fonts, is read more-or-less single letter at a time,
% rather than word or phrase at a time. I think the same applies
% to mathmatical expressions, forcing the reader work bottom up,
% to first parse out individual letters/symbols and then 
% consciously re-assemble them, rather than grasping 
% the expression as a whole, and understanding it top-down.

\RequirePackage[
math-style=upright,
bold-style=upright,
sans-style=upright,
partial=upright,
nabla=upright,
]
{unicode-math}[2020/01/30]
%-----------------------------------------------------------------
% individual fonts
%-----------------------------------------------------------------
% reusable setup commands, that can be used to create 'families'
%
% Font installation preferences:
% (1) github, then to Windows
% (2) font creator site, then to windows
% (3) CTAN
% Reasoning: want same fonts available for all apps/webpages, 
% not just latex. CTAN packages mean updating out of my control,
% though it mean getting updates I would miss on my own.
% 
% TODO: how to keep fonts up to date? clojure script to git fetch
% and re-install?
% TODO: specification that covers all possible weight, width, 
% and shape combinations
%-----------------------------------------------------------------
% main fonts
%-----------------------------------------------------------------
% Libre Caslon 
%
% TODO: other impallari fonts?
%%
% https://github.com/impallari/Libre-Caslon-Display/
% https://github.com/impallari/Libre-Caslon-Text
% Libre Caslon is licensed under the SIL Open Font License v1.1 
%(http://scripts.sil.org/OFL)

%\RequirePackage{librecaslon}[2020-07-29]
%\setmainfont{Libre Caslon Text}%[Scale=0.85]
%-----------------------------------------------------------------

%\setmainfont{Baskerville Old Face}
%\setmainfont{Centaur}
%\setmainfont{Georgia}
%\setmainfont{Perpetua}
%\setmainfont{Poor Richard}

%\newfontfamily\scshape[Letters=SmallCaps,Scale=1.15]{Crimson}

% http://iginomarini.com/fell/the-revival-fonts/
% \fontspec[
%  SmallCapsFont=IM FELL English SC,
%  SmallCapsFeatures={Let ters=SmallCaps},
% ]{IM FELL English}
% \setmainfont{IM FELL English}
 
%\setmainfont{Palatino Linotype}
%\setmainfont{Perpetua}[Scale=1.1]
%\setmainfont{Times New Roman}

%-----------------------------------------------------------------
% atkinson-hyperlegible
%-----------------------------------------------------------------
% https://github.com/googlefonts/atkinson-hyperlegible/
% initial commot 2021-03-10
% OFL-1.1 License

\NewDocumentCommand {\AtkinsonHyperlegibleMainFont} {} {
\setmainfont{AtkinsonHyperlegible}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%SmallcapsFont=*SC,
% %FontFace={ul}{sc}{*SC-Hairline},
% FontFace={ul}{sc}{*SC-Thin},
% FontFace={el}{sc}{*SC-Extralight},
% FontFace={l}{sc}{*SC-Light},
% FontFace={sl}{sc}{*SC-Semilight},
% %FontFace={m}{sc}{*SC-Book},
% FontFace={m}{sc}{*SC-Regular},
% %FontFace={m}{sc}{*SC-Medium},
% FontFace={sb}{sc}{*SC-Semibold},
% FontFace={b}{sc}{*SC-Bold},
% FontFace={eb}{sc}{*SC-Ultrabold},
% FontFace={ub}{sc}{*SC-Heavy},
% %FontFace={ub}{sc}{*SC-Black},
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
%
RawFeature={
+case, % case sensitive forms
},
]
}

%-----------------------------------------------------------------
% Cormorant (Garamond-like)
% 2021-02-27
% https://github.com/CatharsisFonts/Cormorant/releases/tag/v3.3 
% https://fonts.google.com/specimen/Cormorant?preview.text_type=custom#standard-styles
% https://github.com/CatharsisFonts/Cormorant%
% These fonts are licensed under the Open Font License.
% You can use them freely in your products & projects - 
% print or digital, commercial or otherwise. 
% However, you can't sell the fonts on their own.
% This isn't legal advice, please consider consulting a lawyer 
% and see the full license for all details.
% https://fonts.google.com/specimen/Cormorant?preview.text_type=custom#license

% CormorantGaramond, CormorantInfant, CormorantSC,...?

\NewDocumentCommand {\CormorantMainFont} {} {
\setmainfont{Cormorant}[
%\setmainfont{CormorantGaramond}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Medium,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
% SmallCapsFont=CormorantSC-Regular.otf,
% SmallCapsFeatures={
% Letters=SmallCaps,
% },
FontFace={ul}{sc}{CormorantSC-Light.otf},
FontFace={el}{sc}{CormorantSC-Light.otf},
FontFace={l}{sc}{CormorantSC-Regular.otf},
FontFace={sl}{sc}{CormorantSC-Regular.otf},
FontFace={m}{sc}{CormorantSC-Medium.otf},
FontFace={sb}{sc}{CormorantSC-SemiBold.otf},
FontFace={b}{sc}{CormorantSC-Bold.otf},
FontFace={eb}{sc}{CormorantSC-Bold.otf},
FontFace={ub}{sc}{CormorantSC-Bold.otf},
%
FontFace={ul}{n}{*-Light},
FontFace={el}{n}{*-Light},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Medium},
FontFace={sb}{n}{*-SemiBold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-LightItalic},
FontFace={el}{it}{*-LightItalic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-MediumItalic},
FontFace={sb}{it}{*-SemiBoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-LightItalic},
FontFace={el}{sl}{*-LightItalic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-MediumItalic},
FontFace={m}{sl}{*-MediumItalic},
FontFace={sb}{sl}{*-SemiBoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
StylisticSet = {
% 1, % Calligraphic forms, large eyed g.
2, % More traditional Garamond forms, recommended for text sizes
% 3, % schoolbook forms (Infant version)
% 4, % a^e instead of \"{a}
% 5, % unicase small caps
% 6, % dotted i, j smallcaps
% 7, % alternate italic a
% 8, % swash italic Q
% 9, % macedonain/serbian cyrillic
% 10, % bulgarian cyrillic
% 11, % swash italic \partial
12, % crossbar serifs in small caps
13, % capital accents match lowercase
},
Numbers={OldStyle,Proportional},
RawFeature={
%+cv01, % long tailed Q
+cv02, % very long tailed Q
+cv03, % narrower f
+zero}, % slashed (actually dotted) zero
]
}
%-----------------------------------------------------------------
% EB Garamond (Duffner version)
% https://en.wikipedia.org/wiki/EB_Garamond
% http://www.georgduffner.at/ebgaramond/download.html
% https://github.com/georgd/EB-Garamond
% OFL-1.1 License
% last update: Apr 7, 2014
% untested, Duffner fonts uninstalled to avoid conflicts
% with Pardo's version
% see
% https://tex.stackexchange.com/questions/503117/accessing-the-short-arched-f-in-eb-garamond
% mentions that original Duffner version has richer feature set;
% also, I like the look of the original small caps better.


% \NewDocumentCommand {\EBGaramondDuffnerMainFont} {} {
% \setmainfont[
% Path= c:/windows/fonts/ ,
% {EBGaramond12}[
% Path= c:/windows/fonts/ ,
% % TODO: regular, italic, smallcaps only: use FakeBold and FakeSlant?
% UprightFont = *12-Regular,
% ItalicFont  = *12-Italic,
% % BoldFont    = *08-Regular,
% % BoldItalicFont = *08-Italic ]
% % SlantedFont=*-Italic,
% % BoldSlantedFont=*-BoldItalic,
% % SmallCapsFont=EBGaramondSC12-Regular.otf,
% %  SmallCapsFeatures={
% %  Letters=SmallCaps,
% %  },
% % % FontFace={ul}{sc}{CormorantSC-Light.otf},
% % % FontFace={el}{sc}{CormorantSC-Light.otf},
% % % FontFace={l}{sc}{CormorantSC-Regular.otf},
% % % FontFace={sl}{sc}{CormorantSC-Regular.otf},
% % % FontFace={m}{sc}{CormorantSC-Medium.otf},
% % % FontFace={sb}{sc}{CormorantSC-SemiBold.otf},
% % % FontFace={b}{sc}{CormorantSC-Bold.otf},
% % % FontFace={eb}{sc}{CormorantSC-Bold.otf},
% % % FontFace={ub}{sc}{CormorantSC-Bold.otf},
% % %
% % FontFace={ul}{n}{*-Regular},
% % FontFace={el}{n}{*-Regular},
% % FontFace={l}{n}{*-Regular},
% % FontFace={sl}{n}{*-Regular},
% % FontFace={m}{n}{*-Medium},
% % FontFace={sb}{n}{*-SemiBold},
% % FontFace={b}{n}{*-Bold},
% % FontFace={eb}{n}{*-Bold},
% % FontFace={ub}{n}{*-Bold},
% % %
% % FontFace={ul}{it}{*-Italic},
% % FontFace={el}{it}{*-Italic},
% % FontFace={l}{it}{*-Italic},
% % FontFace={sl}{it}{*-Italic},
% % FontFace={m}{it}{*-MediumItalic},
% % FontFace={sb}{it}{*-SemiBoldItalic},
% % FontFace={b}{it}{*-BoldItalic},
% % FontFace={eb}{it}{*-BoldItalic},
% % FontFace={ub}{it}{*-BoldItalic},
% % %
% % FontFace={ul}{sl}{*-LightItalic},
% % FontFace={el}{sl}{*-LightItalic},
% % FontFace={l}{sl}{*-Italic},
% % FontFace={sl}{sl}{*-MediumItalic},
% % FontFace={m}{sl}{*-MediumItalic},
% % FontFace={sb}{sl}{*-SemiBoldItalic},
% % FontFace={b}{sl}{*-BoldItalic},
% % FontFace={eb}{sl}{*-BoldItalic},
% % FontFace={ub}{sl}{*-BoldItalic},
% StylisticSet = {
% % 1, % pointed cyrillic capitals
% % 2, % %
% % 3, % schoolbook forms (Infant version)
% % 4, % a^e instead of \"{a}
% % 5, % unicase small caps
% % 6, % 'roman' greek latters
% 7, % better acute accent placement
% },
% Numbers={OldStyle,Proportional},
% RawFeature={
% +calt, % contextual alternates
% +case, % case sensitive forms
% +ccmp, % glyph (de)composition
% %+cv01, % s -> f
% +cv02, % fancy @
% %+cv03, % IJ -> ij
% +cv06, % fancy <,>
% %+cv11, % I -> 1?
% %+cv21, % round a
% %+cv27, % round g
% %+cv47, % german ss
% %+cv80, % ~ -> acute accent?
% %+cv83, % 'roman' chi
% % skipping more cvXX
% +onum, % old style figures
% %+salt, % tilde theta, Theta 
% +zero}, % slashed (actually dotted) zero
% ]
% }

%-----------------------------------------------------------------
% EB Garamond12
% https://en.wikipedia.org/wiki/EB_Garamond
% https://github.com/octaviopardo/EBGaramond12
% OFL-1.1 License
% 2021-02-18

\NewDocumentCommand {\EBGaramondPardoMainFont} {} {
\setmainfont{EBGaramond}[
Scale=1.0,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-MediumItalic,
BoldFont=*-SemiBold,
BoldItalicFont=*-SemiBoldItalic,
SlantedFont=*-MediumItalic,
BoldSlantedFont=*-SemiBoldItalic,
% SmallCapsFont=EBGaramond-Regular.otf,
% SmallCapsFeatures={
% Letters=SmallCaps,
% },
% FontFace={ul}{sc}{*-Regular.otf},
% FontFace={el}{sc}{*-Regular.otf},
% FontFace={l}{sc}{*-Regular.otf},
% FontFace={sl}{sc}{*-Regular.otf},
% FontFace={m}{sc}{*-Medium.otf},
% FontFace={sb}{sc}{*-SemiBold.otf},
% FontFace={b}{sc}{*-Bold.otf},
% FontFace={eb}{sc}{*-ExtraBold.otf},
% FontFace={ub}{sc}{*-ExtraBold.otf},
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Medium},
FontFace={sb}{n}{*-SemiBold},
FontFace={b}{n}{*-SemiBold},
FontFace={eb}{n}{*-Bold},
% FontFace={b}{n}{*-Bold},
% FontFace={eb}{n}{*-ExtraBold},
FontFace={ub}{n}{*-ExtraBold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-MediumItalic},
FontFace={sb}{it}{*-SemiBoldItalic},
FontFace={b}{it}{*-SemiBoldItalic},
FontFace={eb}{it}{*-BoldItalic},
% FontFace={b}{it}{*-BoldItalic},
% FontFace={eb}{it}{*-ExtraBoldItalic},
FontFace={ub}{it}{*-ExtraBoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-MediumItalic},
FontFace={sb}{sl}{*-SemiBoldItalic},
FontFace={b}{sl}{*-SemiBoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
% FontFace={b}{sl}{*-BoldItalic},
% FontFace={eb}{sl}{*-ExtraBoldItalic},
FontFace={ub}{sl}{*-ExtraBoldItalic},
RawFeature={
+case, % case sensitive forms
%+swsh, % very long tailed Q
},
StylisticSet = {
6,% long tailed Q
},
Numbers={OldStyle,Proportional},
]
}

% old experiments:
% \setmainfont{EB Garamond}
% [
% % RawFeature={
% % % %+aalt, % all characters tiny
% % % %+c2pc, % all caps petite
% % % %+c2sc, % all caps small
% % % +case, % case sensitive forms
% % % %+dlig, % some weird ligatures
% % % %+frac, % small digits out of position
% % % %+hist, % all s go to f-ish shape
% % % +hlig, % no obvious effect
% % % +kern, % no obvious effect
% % % +liga, % no obvious effect
% % % %+lnum, % all digits same size, rise, drop
% % % %+mark, % no obvious effect
% % % %+mkmk, % no obvious effect
% % % %+onum, % no obvious effect
% % % %+ordn, % no obvious effect
% % % %+pcap, % caps/smallcaps for all
% % % %+pnum, % no obvious effect
% % % %+sinf, % all characters tiny
% % % %+smcp, % all text csc
% % % %+ss01, % all text csc
% % % %+ss02, % text (not math) parens turn into pointing hands
% % % %+ss03, % no obvious effect,except all digits same
% % % %+ss04, % text (not math) parens turn into flourished leaves
% % % %+ss05, % no obvious effect
% % +ss06, % no obvious effect
% % % %+ss07, % all s go to f-ish shape
% % % %+subs, % all characters tiny
% % % %+sups, % all characters tiny
% % % %+swsh, % page header all swashed, italic caps swashed
% % % %+tnum, % no obvious effect
% % },
% %StylisticSet = 1,% all petite caps
% %StylisticSet = 2,% text parens -> hands
% %StylisticSet = 3,% ?
% %StylisticSet = 4,% text parens -> flourish
% %StylisticSet = 5,% ss -> 'beta'
% StylisticSet = 6,% long tailed Q
% %StylisticSet = 7,% jumps -> iumpf
% FontFace={md}{n}{Font=* Medium},
% FontFace={lb}{n}{Font=* Medium},
% FontFace={sb}{n}{Font=* SemiBold},
% FontFace={eb}{n}{Font=* ExtraBold},
% % no obvious change from no specification
% %SmallCapsFeatures={Letters=Uppercase},
% % smallcaps caps smaller than lower case
% %SmallCapsFeatures={Letters=UppercasePetiteCaps},
% % smallcaps caps same size as lower case
% %SmallCapsFeatures={Letters=UppercaseSmallCaps},
% % increase difference btwn upper and lower case
% % SmallCapsFeatures={Letters=PetiteCaps},
% % no obvious change from no specification
% %SmallCapsFeatures={Letters=SmallCaps},
% % no obvious change from no specification
% %SmallCapsFeatures={Letters=Unicase},
% % very small difference btwn upper and lower case
% % Would still like to have uppercase slightly larger
% % SmallCapsFeatures={
% % Letters={UppercaseSmallCaps,PetiteCaps},
% % Scale=1.2,
% % FakeStretch=0.9,
% % },
% Numbers={OldStyle,Proportional},
% %Scale=1.0,
% %Scale=MatchLowercase,
% %Scale=MatchUppercase,
% ]

%-----------------------------------------------------------------
% Erewhon <- Heuristica <- Utopia
% https://ctan.org/pkg/erewhon
% OFL-1.1 License
% Version 1.114 2021-02-26
% Licenses  The SIL Open Font License
% The LATEX Project Public License 1.3

\NewDocumentCommand {\ErewhonMainFont} {} {
\setmainfont{Erewhon}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-RegularSlanted,
BoldSlantedFont=*-BoldSlanted,
%
% FontFace={ul}{sc}{*-Thin},
% FontFace={el}{sc}{*-Extralight},
% FontFace={l}{sc}{*-Light},
% FontFace={sl}{sc}{*-Semilight},
% FontFace={m}{sc}{*-Book},
% FontFace={m}{sc}{*-Regular},
% FontFace={sb}{sc}{*-Semibold},
% FontFace={b}{sc}{*-Bold},
% FontFace={eb}{sc}{*-Ultrabold},
% FontFace={ub}{sc}{*-Heavy},
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-RegularSlanted},
FontFace={el}{sl}{*-RegularSlanted},
FontFace={l}{sl}{*-RegularSlanted},
FontFace={sl}{sl}{*-RegularSlanted},
FontFace={m}{sl}{*-RegularSlanted},
FontFace={sb}{sl}{*-BoldSlanted},
FontFace={b}{sl}{*-BoldSlanted},
FontFace={eb}{sl}{*-BoldSlanted},
FontFace={ub}{sl}{*-BoldSlanted},
RawFeature={
+case, % case sensitive forms
},
StylisticSet = {
},
Numbers={OldStyle,Proportional},
]
}

%-----------------------------------------------------------------
% FiraGo <- FiraSans <- Metal
% https://github.com/bBoxType/FiraGO
% OFL-1.1 License
% 1.0 Mar 14 2018

% TODO: what should happen to sans font
% when main font is sans?

\NewDocumentCommand {\FiraGoMainFont} {} {
\setmainfont{FiraGo}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%SmallcapsFont=*SC,
% %FontFace={ul}{sc}{*SC-Hairline},
% FontFace={ul}{sc}{*SC-Thin},
% FontFace={el}{sc}{*SC-Extralight},
% FontFace={l}{sc}{*SC-Light},
% FontFace={sl}{sc}{*SC-Semilight},
% %FontFace={m}{sc}{*SC-Book},
% FontFace={m}{sc}{*SC-Regular},
% %FontFace={m}{sc}{*SC-Medium},
% FontFace={sb}{sc}{*SC-Semibold},
% FontFace={b}{sc}{*SC-Bold},
% FontFace={eb}{sc}{*SC-Ultrabold},
% FontFace={ub}{sc}{*SC-Heavy},
% %FontFace={ub}{sc}{*SC-Black},
%
%FontFace={ul}{n}{*-Hair},
%FontFace={ul}{n}{*-Thin},
FontFace={ul}{n}{*-UltraLight},
FontFace={el}{n}{*-ExtraLight},
FontFace={l}{n}{*-Light},
%FontFace={sl}{n}{*-Book},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Medium},
FontFace={sb}{n}{*-SemiBold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-ExtraBold},
FontFace={ub}{n}{*-Heavy},
%
%FontFace={ul}{it}{*-HairItalic},
%FontFace={ul}{it}{*-ThinItalic},
FontFace={ul}{it}{*-UltraLightItalic},
FontFace={el}{it}{*-ExtraLightItalic},
FontFace={l}{it}{*-LightItalic},
%FontFace={sl}{it}{*-Book},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-MediumItalic},
FontFace={sb}{it}{*-SemiBoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-ExtraBoldItalic},
FontFace={ub}{it}{*-HeavyItalic},
%
%FontFace={ul}{sl}{*-HairItalic},
%FontFace={ul}{sl}{*-ThinItalic},
FontFace={ul}{sl}{*-UltraLightItalic},
FontFace={el}{sl}{*-ExtraLightItalic},
FontFace={l}{sl}{*-LightItalic},
%FontFace={sl}{sl}{*-Book},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-MediumItalic},
FontFace={sb}{sl}{*-SemiBoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-ExtraBoldItalic},
FontFace={ub}{sl}{*-HeavyItalic},
%
RawFeature={
+calt,  % contextual alternatives (arabic?)
+case, % case sensitive accents, etc.
+ccmp, % glyph (de)composition
+finas, % terminal forms (arabic?)
+init, % initial forms (arabic?)
+medi, % medial forms (arabic?)
+onum, % oldstyle figures
+zero, % slashed zero
},
]
}
%-----------------------------------------------------------------
% Garamond-Libre
% These fonts are made available under the X11 license. See COPYING for details.
% https://github.com/dbenjaminmiller/garamond-libre
% https://dbmiller.org/type/garamond-libre.html
% https://ctan.org/pkg/garamond-libre
% Version 1.4 2020-05-03
% Licenses  MIT License
% Copyright 2019–2020 Daniel Benjamin Miller

\NewDocumentCommand {\GaramondLibreMainFont} {} {
\setmainfont{GaramondLibre}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
%
Numbers={OldStyle,Proportional},
RawFeature={
+case, % case sensitive forms
},
]
}


%-----------------------------------------------------------------
% GFS Fonts <- Computer Modern Bright
% https://greekfontsociety-gfs.gr/
% Many fonts available; appear to all be OFL 1.1
%-----------------------------------------------------------------
% GFS Artemisia <- Times Roman
% https://greekfontsociety-gfs.gr/typefaces/20th_21st_century#GFS_Artemisia
% OFL-1.1 License
% downloaded 2021-03-03

\NewDocumentCommand {\GFSArtemisiaMainFont} {} {
\setmainfont{GFSArtemisia}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=GFSArtemisia,
ItalicFont=*It,
BoldFont=*Bold,
BoldItalicFont=*BoldIt,
SlantedFont=*It,
BoldSlantedFont=*BoldIt,
%
FontFace={ul}{n}{GFSArtemisia},
FontFace={el}{n}{GFSArtemisia},
FontFace={l}{n}{GFSArtemisia},
FontFace={sl}{n}{GFSArtemisia},
FontFace={m}{n}{GFSArtemisia},
FontFace={sb}{n}{*Bold},
FontFace={b}{n}{*Bold},
FontFace={eb}{n}{*Bold},
FontFace={ub}{n}{*Bold},
%
FontFace={ul}{it}{*It},
FontFace={el}{it}{*It},
FontFace={l}{it}{*It},
FontFace={sl}{it}{*It},
FontFace={m}{it}{*It},
FontFace={sb}{it}{*BoldIt},
FontFace={b}{it}{*BoldIt},
FontFace={eb}{it}{*BoldIt},
FontFace={ub}{it}{*BoldIt},
%
FontFace={ul}{sl}{*It},
FontFace={el}{sl}{*It},
FontFace={l}{sl}{*It},
FontFace={sl}{sl}{*It},
FontFace={m}{sl}{*It},
FontFace={sb}{sl}{*BoldIt},
FontFace={b}{sl}{*BoldIt},
FontFace={eb}{sl}{*BoldIt},
FontFace={ub}{sl}{*BoldIt},
%
RawFeature={
+fina, % terminal forms 
+onum, % oldstyle figures
},
]
}
%-----------------------------------------------------------------
% GFS Bodoni <- Bodoni
% https://greekfontsociety-gfs.gr/typefaces/20th_21st_century#GFS_Bodoni
% OFL-1.1 License
% downloaded 2021-03-03

\NewDocumentCommand {\GFSBodoniMainFont} {} {
\setmainfont{GFSBodoni}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=GFSBodoni,
ItalicFont=*It,
BoldFont=*Bold,
BoldItalicFont=*BoldIt,
SlantedFont=*It,
BoldSlantedFont=*BoldIt,
%
FontFace={ul}{n}{GFSBodoni},
FontFace={el}{n}{GFSBodoni},
FontFace={l}{n}{GFSBodoni},
FontFace={sl}{n}{GFSBodoni},
FontFace={m}{n}{GFSBodoni},
FontFace={sb}{n}{*Bold},
FontFace={b}{n}{*Bold},
FontFace={eb}{n}{*Bold},
FontFace={ub}{n}{*Bold},
%
FontFace={ul}{it}{*It},
FontFace={el}{it}{*It},
FontFace={l}{it}{*It},
FontFace={sl}{it}{*It},
FontFace={m}{it}{*It},
FontFace={sb}{it}{*BoldIt},
FontFace={b}{it}{*BoldIt},
FontFace={eb}{it}{*BoldIt},
FontFace={ub}{it}{*BoldIt},
%
FontFace={ul}{sl}{*It},
FontFace={el}{sl}{*It},
FontFace={l}{sl}{*It},
FontFace={sl}{sl}{*It},
FontFace={m}{sl}{*It},
FontFace={sb}{sl}{*BoldIt},
FontFace={b}{sl}{*BoldIt},
FontFace={eb}{sl}{*BoldIt},
FontFace={ub}{sl}{*BoldIt},
%
RawFeature={
+fina, % terminal forms 
+onum, % oldstyle figures
},
]
}
%-----------------------------------------------------------------
% GFS Didot <- Didot, Palatino
% https://greekfontsociety-gfs.gr/typefaces/20th_21st_century#GFS_Didot
% OFL-1.1 License
% downloaded 2021-03-03

\NewDocumentCommand {\GFSDidotMainFont} {} {
\setmainfont{GFSDidot}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=GFSDidot,
ItalicFont=*Italic,
BoldFont=*Bold,
BoldItalicFont=*BoldItalic,
SlantedFont=*Italic,
BoldSlantedFont=*BoldItalic,
%
FontFace={ul}{n}{GFSDidot},
FontFace={el}{n}{GFSDidot},
FontFace={l}{n}{GFSDidot},
FontFace={sl}{n}{GFSDidot},
FontFace={m}{n}{GFSDidot},
FontFace={sb}{n}{*Bold},
FontFace={b}{n}{*Bold},
FontFace={eb}{n}{*Bold},
FontFace={ub}{n}{*Bold},
%
FontFace={ul}{it}{*Italic},
FontFace={el}{it}{*Italic},
FontFace={l}{it}{*Italic},
FontFace={sl}{it}{*Italic},
FontFace={m}{it}{*Italic},
FontFace={sb}{it}{*BoldItalic},
FontFace={b}{it}{*BoldItalic},
FontFace={eb}{it}{*BoldItalic},
FontFace={ub}{it}{*BoldItalic},
%
FontFace={ul}{sl}{*Italic},
FontFace={el}{sl}{*Italic},
FontFace={l}{sl}{*Italic},
FontFace={sl}{sl}{*Italic},
FontFace={m}{sl}{*Italic},
FontFace={sb}{sl}{*BoldItalic},
FontFace={b}{sl}{*BoldItalic},
FontFace={eb}{sl}{*BoldItalic},
FontFace={ub}{sl}{*BoldItalic},
%
RawFeature={
+fina, % terminal forms 
+onum, % oldstyle figures
},
]
}
%-----------------------------------------------------------------
% GFS Newohellenic <- New Hellenic
% https://greekfontsociety-gfs.gr/typefaces/20th_21st_century#GFS_NeoHellenic
% OFL-1.1 License
% downloaded 2021-03-03

% Effectively a sans font

\NewDocumentCommand {\GFSNeohellenicMainFont} {} {
\setmainfont{GFSNeohellenic}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=GFSNeohellenic,
ItalicFont=*It,
BoldFont=*Bold,
BoldItalicFont=*BoldIt,
SlantedFont=*It,
BoldSlantedFont=*BoldIt,
%
FontFace={ul}{n}{GFSNeohellenic},
FontFace={el}{n}{GFSNeohellenic},
FontFace={l}{n}{GFSNeohellenic},
FontFace={sl}{n}{GFSNeohellenic},
FontFace={m}{n}{GFSNeohellenic},
FontFace={sb}{n}{*Bold},
FontFace={b}{n}{*Bold},
FontFace={eb}{n}{*Bold},
FontFace={ub}{n}{*Bold},
%
FontFace={ul}{it}{*It},
FontFace={el}{it}{*It},
FontFace={l}{it}{*It},
FontFace={sl}{it}{*It},
FontFace={m}{it}{*It},
FontFace={sb}{it}{*BoldIt},
FontFace={b}{it}{*BoldIt},
FontFace={eb}{it}{*BoldIt},
FontFace={ub}{it}{*BoldIt},
%
FontFace={ul}{sl}{*It},
FontFace={el}{sl}{*It},
FontFace={l}{sl}{*It},
FontFace={sl}{sl}{*It},
FontFace={m}{sl}{*It},
FontFace={sb}{sl}{*BoldIt},
FontFace={b}{sl}{*BoldIt},
FontFace={eb}{sl}{*BoldIt},
FontFace={ub}{sl}{*BoldIt},
%
RawFeature={
+fina, % terminal forms 
+onum, % oldstyle figures
},
]
}
%-----------------------------------------------------------------
% GFS Orpheus, similar to GFS Orpheus Sans
% https://greekfontsociety-gfs.gr/typefaces/20th_21st_century#GFS_Orpheus
% OFL-1.1 License
% downloaded 2021-03-03

\NewDocumentCommand {\GFSOrpheusMainFont} {} {
\setmainfont{GFS_Orpheus.otf}[
% no variations!
]
}
%-----------------------------------------------------------------
% Kp fonts
%-----------------------------------------------------------------
% https://ctan.org/pkg/kpfonts-otf
% Version 0.34 2021-01-30
% Licenses  The LATEX Project Public License 1.3
% The SIL Open Font License
% Possiblly a harmonius set to use for all fonts
% version 7.040 2021-03-01

\NewDocumentCommand {\KpRomanMainFont} {} {
\setmainfont{KpRoman}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%SmallcapsFont=*SC,
% %FontFace={ul}{sc}{*SC-Hairline},
% FontFace={ul}{sc}{*SC-Thin},
% FontFace={el}{sc}{*SC-Extralight},
% FontFace={l}{sc}{*SC-Light},
% FontFace={sl}{sc}{*SC-Semilight},
% %FontFace={m}{sc}{*SC-Book},
% FontFace={m}{sc}{*SC-Regular},
% %FontFace={m}{sc}{*SC-Medium},
% FontFace={sb}{sc}{*SC-Semibold},
% FontFace={b}{sc}{*SC-Bold},
% FontFace={eb}{sc}{*SC-Ultrabold},
% FontFace={ub}{sc}{*SC-Heavy},
% %FontFace={ub}{sc}{*SC-Black},
%
FontFace={ul}{n}{*-Light},
FontFace={el}{n}{*-Light},
FontFace={l}{n}{*-Light},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-SemiBold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-LightItalic},
FontFace={el}{it}{*-LightItalic},
FontFace={l}{it}{*-LightItalic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-SemiBoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-Italic},
%
FontFace={ul}{sl}{*-LightItalic},
FontFace={el}{sl}{*-LightItalic},
FontFace={l}{sl}{*-LightItalic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-SemiBoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-Italic},
%
Numbers={OldStyle,Proportional},
StylisticSet={
1, % ligatures
},
RawFeature={
+case, % case sensitive forms
+onum, % oldstyle figures (digits)
+swsh, % long tailed Q
},
]
}

%-----------------------------------------------------------------
% Latin Modern Roman <- Computer Modern
% https://ctan.org/pkg/lm
% Home page http://www.gust.org.pl/projects/e-foundry/latin-modern
% Version 2.004
% Licenses  The GUST Font License (GFL)
% 2009-10-30

% TODO: 8, 9, 10, 12 ,17 size fonts for differing faces?

\NewDocumentCommand {\LatinModernMainFont} {} {
\setmainfont{lmroman10}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-regular,
ItalicFont=*-italic,
BoldFont=*-bold,
BoldItalicFont=*-bolditalic,
SlantedFont=*-italic,
BoldSlantedFont=*-bolditalic,
%
SmallCapsFont=lmromancaps10-regular,
SmallCapsFeatures={
%Letters=SmallCaps,
},
% lmromancaps10-oblique?
% TODO: FakeBold?
% FontFace={ul}{sc}{lmromancaps10-regular},
% FontFace={el}{sc}{lmromancaps10-regular},
% FontFace={l}{sc}{lmromancaps10-regular},
% FontFace={sl}{sc}{lmromancaps10-regular},
% FontFace={m}{sc}{lmromancaps10-regular},
% FontFace={m}{sc}{lmromancaps10-regular},
% FontFace={sb}{sc}{lmromancaps10-regular},
% FontFace={b}{sc}{lmromancaps10-regular},
% FontFace={eb}{sc}{lmromancaps10-regular},
% FontFace={ub}{sc}{lmromancaps10-regular},
%
FontFace={ul}{n}{*-regular},
FontFace={el}{n}{*-regular},
FontFace={l}{n}{*-regular},
FontFace={sl}{n}{*-regular},
FontFace={m}{n}{*-regular},
FontFace={sb}{n}{*-bold},
FontFace={b}{n}{*-bold},
FontFace={eb}{n}{*-bold},
FontFace={ub}{n}{*-bold},
%
FontFace={ul}{it}{*-italic},
FontFace={el}{it}{*-italic},
FontFace={l}{it}{*-italic},
FontFace={sl}{it}{*-italic},
FontFace={m}{it}{*-italic},
FontFace={sb}{it}{*-bolditalic},
FontFace={b}{it}{*-bolditalic},
FontFace={eb}{it}{*-bolditalic},
FontFace={ub}{it}{*-bolditalic},
%
FontFace={ul}{sl}{lmromanslant10-regular},
FontFace={el}{sl}{lmromanslant10-regular},
FontFace={l}{sl}{lmromanslant10-regular},
FontFace={sl}{sl}{lmromanslant10-regular},
FontFace={m}{sl}{lmromanslant10-bold},
FontFace={sb}{sl}{lmromanslant10-bold},
FontFace={b}{sl}{lmromanslant10-bold},
FontFace={eb}{sl}{lmromanslant10-bold},
FontFace={ub}{sl}{lmromanslant10-bold},
%
Numbers={OldStyle,Proportional},
Ligatures={Common,TeX},
RawFeature={
+zero, % slashed zero
},
]
}

%-----------------------------------------------------------------
% https://github.com/alerque/libertinus
% OFL-1.1 License
% Possiblly a harmonius set to use for all fonts
% version 7.040 2021-03-01

\NewDocumentCommand {\LibertinusMainFont} {} {
\setmainfont{LibertinusSerif}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-SemiBold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-SemiBoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-SemiBoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
%
Numbers={OldStyle,Proportional},
StylisticSet={
1, % better uppercase umlauts
5, % W -> overlapping VV
6, % fancy &
},
RawFeature={
+calt, % contextual alternatives
+ccmp, % glyhph (de)composition
+cv01, % horizontal lambda-bar
+cv02, % upright gamma?
+zero, % slashed zero
},
]
}

%-----------------------------------------------------------------
% NewComputerModern
% https://ctan.org/pkg/newcomputermodern
%   The GUST Font License (GFL)

% No bold small caps as of 2021-02-24
\NewDocumentCommand {\NewComputerModernMainFont} {} {
\setmainfont{NewCM10}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Book},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BookItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BookItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
%
Numbers={OldStyle,Proportional},
StylisticSet={
%1, % re-arrange capital diacritics
% 5, % serif beta, etc.
},
RawFeature={
+case, % case-sensitive alternatives
+cv01, % long tailed k
%+cv02, % some swash lowercase
+zero, % slashed zero
},
]
}


%-----------------------------------------------------------------
% STIX Two
% https://www.stixfonts.org/
% STIX fonts are available for download at 
% https://github.com/stipub/stixfonts 
% and distributed under the SIL Open Font License, Version 1.1

\NewDocumentCommand {\STIXTwoMainFont} {} {
\setmainfont{STIXTwoText}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Medium},
FontFace={sb}{n}{*-SemiBold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-MediumItalic},
FontFace={sb}{it}{*-SemiBoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-MediumItalic},
FontFace={sb}{sl}{*-SemiBoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
%
Numbers={OldStyle,Proportional},
RawFeature={
+cv01, % horizontal lambda-bar
+cv02, % upright gamma?
},
]
}

%-----------------------------------------------------------------
% TeX Gyre Fonts
% http://www.gust.org.pl/projects/e-foundry/tex-gyre
% https://ctan.org/pkg/tex-gyre?lang=en
% Version 2.501 2018-06-17
% Licenses  The GUST Font License (GFL)
% TODO: TeX Gyre Chorus (only medium italic)?
%-----------------------------------------------------------------
% TeX Gyre Bonum <- URW Bookman L <- Bookman Old Style

\NewDocumentCommand {\BonumMainFont} {} {
 \setmainfont{texgyrebonum}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-regular,
ItalicFont=*-italic,
BoldFont=*-bold,
BoldItalicFont=*-bolditalic,
SlantedFont=*-italic,
BoldSlantedFont=*-bolditalic,
%
% SmallCapsFont=*-regular,
% SmallCapsFeatures={
% %Letters=SmallCaps,
% },
%
FontFace={ul}{n}{*-regular},
FontFace={el}{n}{*-regular},
FontFace={l}{n}{*-regular},
FontFace={sl}{n}{*-regular},
FontFace={m}{n}{*-regular},
FontFace={sb}{n}{*-bold},
FontFace={b}{n}{*-bold},
FontFace={eb}{n}{*-bold},
FontFace={ub}{n}{*-bold},
%
FontFace={ul}{it}{*-italic},
FontFace={el}{it}{*-italic},
FontFace={l}{it}{*-italic},
FontFace={sl}{it}{*-italic},
FontFace={m}{it}{*-italic},
FontFace={sb}{it}{*-bolditalic},
FontFace={b}{it}{*-bolditalic},
FontFace={eb}{it}{*-bolditalic},
FontFace={ub}{it}{*-bolditalic},
%
FontFace={ul}{sl}{*-italic},
FontFace={el}{sl}{*-italic},
FontFace={l}{sl}{*-italic},
FontFace={sl}{sl}{*-italic},
FontFace={m}{sl}{*-italic},
FontFace={sb}{sl}{*-bolditalic},
FontFace={b}{sl}{*-bolditalic},
FontFace={eb}{sl}{*-bolditalic},
FontFace={ub}{sl}{*-bolditalic},
%
Ligatures={Common,TeX},
Scale=1.0,
RawFeature={
+zero, % slashed zero
},
StylisticSet={
1, % stylistic alternatives, like small super (c)
10,% slight changes to math operators, brackets, etc
},
]
}

%-----------------------------------------------------------------
% TeX Gyre Pagella <- URW Palladio L <- Palatino

\NewDocumentCommand {\PagellaMainFont} {} {
\setmainfont{TeXGyrePagella}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%
% SmallCapsFont=*-regular,
% SmallCapsFeatures={
% %Letters=SmallCaps,
% },
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
%
Ligatures={Common,TeX},
Scale=1.0,
RawFeature={
+zero, % slashed zero
},
StylisticSet={
1, % stylistic alternatives, like small super (c)
10,% slight changes to math operators, brackets, etc
},
]
}

%-----------------------------------------------------------------
% TeX Gyre Schola <- URW Century Schoolbook L <- Century Schoolbook

\NewDocumentCommand {\ScholaMainFont} {} {
\setmainfont{texgyreschola}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-regular,
ItalicFont=*-italic,
BoldFont=*-bold,
BoldItalicFont=*-bolditalic,
SlantedFont=*-italic,
BoldSlantedFont=*-bolditalic,
%
% SmallCapsFont=*-regular,
% SmallCapsFeatures={
% %Letters=SmallCaps,
% },
%
FontFace={ul}{n}{*-regular},
FontFace={el}{n}{*-regular},
FontFace={l}{n}{*-regular},
FontFace={sl}{n}{*-regular},
FontFace={m}{n}{*-regular},
FontFace={sb}{n}{*-bold},
FontFace={b}{n}{*-bold},
FontFace={eb}{n}{*-bold},
FontFace={ub}{n}{*-bold},
%
FontFace={ul}{it}{*-italic},
FontFace={el}{it}{*-italic},
FontFace={l}{it}{*-italic},
FontFace={sl}{it}{*-italic},
FontFace={m}{it}{*-italic},
FontFace={sb}{it}{*-bolditalic},
FontFace={b}{it}{*-bolditalic},
FontFace={eb}{it}{*-bolditalic},
FontFace={ub}{it}{*-bolditalic},
%
FontFace={ul}{sl}{*-italic},
FontFace={el}{sl}{*-italic},
FontFace={l}{sl}{*-italic},
FontFace={sl}{sl}{*-italic},
FontFace={m}{sl}{*-italic},
FontFace={sb}{sl}{*-bolditalic},
FontFace={b}{sl}{*-bolditalic},
FontFace={eb}{sl}{*-bolditalic},
FontFace={ub}{sl}{*-bolditalic},
%
Ligatures={Common,TeX},
Scale=1.0,
RawFeature={
+zero, % slashed zero
},
StylisticSet={
1, % stylistic alternatives, like small super (c)
10,% slight changes to math operators, brackets, etc
},
]
}

%-----------------------------------------------------------------
% TeX Gyre Termes <- URW Nimbus Roman No9 L <- Times New Roman

\NewDocumentCommand {\TermesMainFont} {} {
\setmainfont{texgyretermes}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-regular,
ItalicFont=*-italic,
BoldFont=*-bold,
BoldItalicFont=*-bolditalic,
SlantedFont=*-italic,
BoldSlantedFont=*-bolditalic,
%
% SmallCapsFont=*-regular,
% SmallCapsFeatures={
% %Letters=SmallCaps,
% },
%
FontFace={ul}{n}{*-regular},
FontFace={el}{n}{*-regular},
FontFace={l}{n}{*-regular},
FontFace={sl}{n}{*-regular},
FontFace={m}{n}{*-regular},
FontFace={sb}{n}{*-bold},
FontFace={b}{n}{*-bold},
FontFace={eb}{n}{*-bold},
FontFace={ub}{n}{*-bold},
%
FontFace={ul}{it}{*-italic},
FontFace={el}{it}{*-italic},
FontFace={l}{it}{*-italic},
FontFace={sl}{it}{*-italic},
FontFace={m}{it}{*-italic},
FontFace={sb}{it}{*-bolditalic},
FontFace={b}{it}{*-bolditalic},
FontFace={eb}{it}{*-bolditalic},
FontFace={ub}{it}{*-bolditalic},
%
FontFace={ul}{sl}{*-italic},
FontFace={el}{sl}{*-italic},
FontFace={l}{sl}{*-italic},
FontFace={sl}{sl}{*-italic},
FontFace={m}{sl}{*-italic},
FontFace={sb}{sl}{*-bolditalic},
FontFace={b}{sl}{*-bolditalic},
FontFace={eb}{sl}{*-bolditalic},
FontFace={ub}{sl}{*-bolditalic},
%
Ligatures={Common,TeX},
Scale=1.0,
RawFeature={
+zero, % slashed zero
},
StylisticSet={
1, % stylistic alternatives, like small super (c)
10,% slight changes to math operators, brackets, etc
},
]
}

%-----------------------------------------------------------------
% XITS
% Times-like, accompanying math font
% Open Font License, version 1.1.
% https://github.com/alif-type/xits

\NewDocumentCommand {\XITSMainFont} {} {
\setmainfont{XITS}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
% StylisticSet = {
% 6,% long tailed Q
% },
Numbers={OldStyle,Proportional},
]
}

%-----------------------------------------------------------------
% sans fonts
%-----------------------------------------------------------------
% TODO: what if the main font is sans?
% Note: \setsansfont doesn't appear to affect math sans font
% Currently avoiding sans in regular text, so leave as default
% Maybe later choose something to match the math sans, and use 
% that for text pseudocode that matches math pseudocode as closely
% as possible.
%-----------------------------------------------------------------
% atkinson-hyperlegible
%-----------------------------------------------------------------
% https://github.com/googlefonts/atkinson-hyperlegible/
% initial commot 2021-03-10
% OFL-1.1 License

\NewDocumentCommand {\AtkinsonHyperlegibleSansFont} {} {
\setsansfont{AtkinsonHyperlegible}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%SmallcapsFont=*SC,
% %FontFace={ul}{sc}{*SC-Hairline},
% FontFace={ul}{sc}{*SC-Thin},
% FontFace={el}{sc}{*SC-Extralight},
% FontFace={l}{sc}{*SC-Light},
% FontFace={sl}{sc}{*SC-Semilight},
% %FontFace={m}{sc}{*SC-Book},
% FontFace={m}{sc}{*SC-Regular},
% %FontFace={m}{sc}{*SC-Medium},
% FontFace={sb}{sc}{*SC-Semibold},
% FontFace={b}{sc}{*SC-Bold},
% FontFace={eb}{sc}{*SC-Ultrabold},
% FontFace={ub}{sc}{*SC-Heavy},
% %FontFace={ub}{sc}{*SC-Black},
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
%
RawFeature={
+case, % case sensitive forms
},
]
}

%-----------------------------------------------------------------
% FiraGo <- FiraSans <- Metal
% https://github.com/bBoxType/FiraGO
% OFL-1.1 License
% 1.0 Mar 14 2018

\NewDocumentCommand {\FiraGoSansFont} {} {
\setsansfont{FiraGo}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%SmallcapsFont=*SC,
% %FontFace={ul}{sc}{*SC-Hairline},
% FontFace={ul}{sc}{*SC-Thin},
% FontFace={el}{sc}{*SC-Extralight},
% FontFace={l}{sc}{*SC-Light},
% FontFace={sl}{sc}{*SC-Semilight},
% %FontFace={m}{sc}{*SC-Book},
% FontFace={m}{sc}{*SC-Regular},
% %FontFace={m}{sc}{*SC-Medium},
% FontFace={sb}{sc}{*SC-Semibold},
% FontFace={b}{sc}{*SC-Bold},
% FontFace={eb}{sc}{*SC-Ultrabold},
% FontFace={ub}{sc}{*SC-Heavy},
% %FontFace={ub}{sc}{*SC-Black},
%
%FontFace={ul}{n}{*-Hair},
%FontFace={ul}{n}{*-Thin},
FontFace={ul}{n}{*-UltraLight},
FontFace={el}{n}{*-ExtraLight},
FontFace={l}{n}{*-Light},
%FontFace={sl}{n}{*-Book},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Medium},
FontFace={sb}{n}{*-SemiBold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-ExtraBold},
FontFace={ub}{n}{*-Heavy},
%
%FontFace={ul}{it}{*-HairItalic},
%FontFace={ul}{it}{*-ThinItalic},
FontFace={ul}{it}{*-UltraLightItalic},
FontFace={el}{it}{*-ExtraLightItalic},
FontFace={l}{it}{*-LightItalic},
%FontFace={sl}{it}{*-Book},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-MediumItalic},
FontFace={sb}{it}{*-SemiBoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-ExtraBoldItalic},
FontFace={ub}{it}{*-HeavyItalic},
%
%FontFace={ul}{sl}{*-HairItalic},
%FontFace={ul}{sl}{*-ThinItalic},
FontFace={ul}{sl}{*-UltraLightItalic},
FontFace={el}{sl}{*-ExtraLightItalic},
FontFace={l}{sl}{*-LightItalic},
%FontFace={sl}{sl}{*-Book},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-MediumItalic},
FontFace={sb}{sl}{*-SemiBoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-ExtraBoldItalic},
FontFace={ub}{sl}{*-HeavyItalic},
%
RawFeature={
+calt,  % contextual alternatives (arabic?)
+case, % case sensitive accents, etc.
+ccmp, % glyph (de)composition
+finas, % terminal forms (arabic?)
+init, % initial forms (arabic?)
+medi, % medial forms (arabic?)
+onum, % oldstyle figures
+zero, % slashed zero
},
]
}
%-----------------------------------------------------------------
% GFS Newohellenic <- New Hellenic
% https://greekfontsociety-gfs.gr/typefaces/20th_21st_century#GFS_NeoHellenic
% OFL-1.1 License
% downloaded 2021-03-03

% Effectively a sans font --- what to do when sans 
% and main are the same?

\NewDocumentCommand {\GFSNeohellenicSansFont} {} {
\setsansfont{GFSNeohellenic.otf}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=GFSNeohellenic,
ItalicFont=*It,
BoldFont=*Bold,
BoldItalicFont=*BoldIt,
SlantedFont=*It,
BoldSlantedFont=*BoldIt,
%
FontFace={ul}{n}{GFSNeohellenic},
FontFace={el}{n}{GFSNeohellenic},
FontFace={l}{n}{GFSNeohellenic},
FontFace={sl}{n}{GFSNeohellenic},
FontFace={m}{n}{GFSNeohellenic},
FontFace={sb}{n}{*Bold},
FontFace={b}{n}{*Bold},
FontFace={eb}{n}{*Bold},
FontFace={ub}{n}{*Bold},
%
FontFace={ul}{it}{*It},
FontFace={el}{it}{*It},
FontFace={l}{it}{*It},
FontFace={sl}{it}{*It},
FontFace={m}{it}{*It},
FontFace={sb}{it}{*BoldIt},
FontFace={b}{it}{*BoldIt},
FontFace={eb}{it}{*BoldIt},
FontFace={ub}{it}{*BoldIt},
%
FontFace={ul}{sl}{*It},
FontFace={el}{sl}{*It},
FontFace={l}{sl}{*It},
FontFace={sl}{sl}{*It},
FontFace={m}{sl}{*It},
FontFace={sb}{sl}{*BoldIt},
FontFace={b}{sl}{*BoldIt},
FontFace={eb}{sl}{*BoldIt},
FontFace={ub}{sl}{*BoldIt},
%
RawFeature={
+fina, % terminal forms 
+onum, % oldstyle figures
},
]
}
%-----------------------------------------------------------------
% GFS Orpheus, similar to GFS Orpheus Sans
% https://greekfontsociety-gfs.gr/typefaces/20th_21st_century#GFS_Orpheus_Sans
% OFL-1.1 License
% downloaded 2021-03-03

\NewDocumentCommand {\GFSOrpheusSansFont} {} {
\setsansfont{GFS_Orpheus_Sans.otf}[
% no variations!
StylisticSet={
1,
2,
},
]
}
%-----------------------------------------------------------------
% http://arkandis.tuxfamily.org/adffonts.html
% GNU General Public License V2 and later, with font exception.
% Mar-12-11

\NewDocumentCommand {\GilliusADFSansFont} {} {
\setsansfont{GilliusADF}[
Path= c:/windows/fonts/ ,
Scale=1.05,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-CondItalic,
BoldSlantedFont=*-BoldCondItalic,
% SmallCapsFont=*-Regular.otf,
% SmallCapsFeatures={
% Letters=SmallCaps,
% },
% FontFace={ul}{sc}{*-Light.otf},
% FontFace={el}{sc}{*-Light.otf},
% FontFace={l}{sc}{*-Regular.otf},
% FontFace={sl}{sc}{*-Regular.otf},
% FontFace={m}{sc}{*-Medium.otf},
% FontFace={sb}{sc}{*-SemiBold.otf},
% FontFace={b}{sc}{*-Bold.otf},
% FontFace={eb}{sc}{*-Bold.otf},
% FontFace={ub}{sc}{*-Bold.otf},
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
]
}

\NewDocumentCommand {\GilliusADFTwoSansFont} {} {
\setsansfont{GilliusADFNo2}[
Path= c:/windows/fonts/ ,
Scale=1.05,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-CondItalic,
BoldSlantedFont=*-BoldCondItalic,
% SmallCapsFont=*-Regular.otf,
% SmallCapsFeatures={
% Letters=SmallCaps,
% },
% FontFace={ul}{sc}{*-Light.otf},
% FontFace={el}{sc}{*-Light.otf},
% FontFace={l}{sc}{*-Regular.otf},
% FontFace={sl}{sc}{*-Regular.otf},
% FontFace={m}{sc}{*-Medium.otf},
% FontFace={sb}{sc}{*-SemiBold.otf},
% FontFace={b}{sc}{*-Bold.otf},
% FontFace={eb}{sc}{*-Bold.otf},
% FontFace={ub}{sc}{*-Bold.otf},
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
]
}

%-----------------------------------------------------------------
% Latin Modern Sans <- Computer Modern
% https://ctan.org/pkg/lm
% Home page http://www.gust.org.pl/projects/e-foundry/latin-modern
% Version 2.004
% Licenses  The GUST Font License (GFL)
% 2009-09-30

% TODO: 8, 9, 10, 12 ,17 size fonts for differing faces?

\NewDocumentCommand {\LatinModernSansFont} {} {
\setsansfont{lmsans10}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-regular,
ItalicFont=*-oblique,
BoldFont=*-bold,
BoldItalicFont=*-boldoblique,
SlantedFont=*-oblique,
BoldSlantedFont=*-boldoblique,
%
% FontFace={ul}{sc}{*-Thin},
% FontFace={el}{sc}{*-Extralight},
% FontFace={l}{sc}{*-Light},
% FontFace={sl}{sc}{*-Semilight},
% FontFace={m}{sc}{*-Book},
% FontFace={m}{sc}{*-Regular},
% FontFace={sb}{sc}{*-Semibold},
% FontFace={b}{sc}{*-Bold},
% FontFace={eb}{sc}{*-Ultrabold},
% FontFace={ub}{sc}{*-Heavy},
%
FontFace={ul}{n}{*-regular},
FontFace={el}{n}{*-regular},
FontFace={l}{n}{*-regular},
FontFace={sl}{n}{*-regular},
FontFace={m}{n}{*-regular},
FontFace={sb}{n}{*-bold},
FontFace={b}{n}{*-bold},
FontFace={eb}{n}{*-bold},
FontFace={ub}{n}{*-bold},
%
FontFace={ul}{it}{*-oblique},
FontFace={el}{it}{*-oblique},
FontFace={l}{it}{*-oblique},
FontFace={sl}{it}{*-oblique},
FontFace={m}{it}{*-oblique},
FontFace={sb}{it}{*-boldoblique},
FontFace={b}{it}{*-boldoblique},
FontFace={eb}{it}{*-boldoblique},
FontFace={ub}{it}{*-boldoblique},
%
FontFace={ul}{sl}{*-oblique},
FontFace={el}{sl}{*-oblique},
FontFace={l}{sl}{*-oblique},
FontFace={sl}{sl}{*-oblique},
FontFace={m}{sl}{*-oblique},
FontFace={sb}{sl}{*-boldoblique},
FontFace={b}{sl}{*-boldoblique},
FontFace={eb}{sl}{*-boldoblique},
FontFace={ub}{sl}{*-boldoblique},
%
Numbers={OldStyle,Proportional},
Ligatures={Common,TeX},
RawFeature={
+zero, % slashed zero
},
]
}

%-----------------------------------------------------------------
% https://github.com/alerque/libertinus
% OFL-1.1 License
% Possiblly a harmonius set to use for all fonts
% version 7.040 2021-03-01

\NewDocumentCommand {\LibertinusSansFont} {} {
\setsansfont{LibertinusSans}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
%BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
%BoldSlantedFont=*-BoldItalic,
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-Italic},
FontFace={b}{it}{*-Italic},
FontFace={eb}{it}{*-Italic},
FontFace={ub}{it}{*-Italic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-Italic},
FontFace={b}{sl}{*-Italic},
FontFace={eb}{sl}{*-Italic},
FontFace={ub}{sl}{*-Italic},
%
Numbers={OldStyle,Proportional},
StylisticSet={
1, % better uppercase umlauts
5, % W -> overlapping VV
6, % fancy &
},
RawFeature={
+calt, % contextual alternatives
+ccmp, % glyhph (de)composition
+cv01, % horizontal lambda-bar
+cv02, % upright gamma?
+zero, % slashed zero
},
]
}

%-----------------------------------------------------------------
% NewComputerModern
% https://ctan.org/pkg/newcomputermodern
%   The GUST Font License (GFL)

% No bold small caps as of 2021-02-24
\NewDocumentCommand {\NewComputerModernSansFont} {} {
\setsansfont{NewCMSans10}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Oblique,
BoldFont=*-Bold,
BoldItalicFont=*-BoldOblique,
SlantedFont=*-Oblique,
BoldSlantedFont=*-BoldOblique,
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Book},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Oblique},
FontFace={el}{it}{*-Oblique},
FontFace={l}{it}{*-Oblique},
FontFace={sl}{it}{*-Oblique},
FontFace={m}{it}{*-Oblique},
FontFace={sb}{it}{*-BookOblique},
FontFace={b}{it}{*-BoldOblique},
FontFace={eb}{it}{*-BoldOblique},
FontFace={ub}{it}{*-BoldOblique},
%
FontFace={ul}{sl}{*-Oblique},
FontFace={el}{sl}{*-Oblique},
FontFace={l}{sl}{*-Oblique},
FontFace={sl}{sl}{*-Oblique},
FontFace={m}{sl}{*-Oblique},
FontFace={sb}{sl}{*-BookOblique},
FontFace={b}{sl}{*-BoldOblique},
FontFace={eb}{sl}{*-BoldOblique},
FontFace={ub}{sl}{*-BoldOblique},
%
Numbers={OldStyle,Proportional},
StylisticSet={
%1, % re-arrange capital diacritics
%2, % angular greek capitals
%3, % angular greek capitals
%4, % angular greek capitals
% 5, % serif beta, etc.
},
RawFeature={
+case, % case-sensitive alternatives
+zero, % slashed zero
},
]
}


%-----------------------------------------------------------------
% TeX Gyre Fonts
% https://ctan.org/pkg/tex-gyre?lang=en
% Version 2.501 2018-06-17
% Licenses  The GUST Font License (GFL)
%-----------------------------------------------------------------
% TeX Gyre Adventor <-  URW Gothic L <- ITC Avant Garde Gothic
\NewDocumentCommand {\AdventorSansFont} {} {
\setsansfont{texgyreadventor}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-regular,
ItalicFont=*-italic,
BoldFont=*-bold,
BoldItalicFont=*-bolditalic,
SlantedFont=*-italic,
BoldSlantedFont=*-bolditalic,
%
% SmallCapsFont=*-regular,
% SmallCapsFeatures={
% %Letters=SmallCaps,
% },
%
FontFace={ul}{n}{*-regular},
FontFace={el}{n}{*-regular},
FontFace={l}{n}{*-regular},
FontFace={sl}{n}{*-regular},
FontFace={m}{n}{*-regular},
FontFace={sb}{n}{*-bold},
FontFace={b}{n}{*-bold},
FontFace={eb}{n}{*-bold},
FontFace={ub}{n}{*-bold},
%
FontFace={ul}{it}{*-italic},
FontFace={el}{it}{*-italic},
FontFace={l}{it}{*-italic},
FontFace={sl}{it}{*-italic},
FontFace={m}{it}{*-italic},
FontFace={sb}{it}{*-bolditalic},
FontFace={b}{it}{*-bolditalic},
FontFace={eb}{it}{*-bolditalic},
FontFace={ub}{it}{*-bolditalic},
%
FontFace={ul}{sl}{*-italic},
FontFace={el}{sl}{*-italic},
FontFace={l}{sl}{*-italic},
FontFace={sl}{sl}{*-italic},
FontFace={m}{sl}{*-italic},
FontFace={sb}{sl}{*-bolditalic},
FontFace={b}{sl}{*-bolditalic},
FontFace={eb}{sl}{*-bolditalic},
FontFace={ub}{sl}{*-bolditalic},
%
Ligatures={Common,TeX},
Scale=1.0,
RawFeature={
+zero, % slashed zero
},
StylisticSet={
1, % stylistic alternatives, like small super (c)
10,% slight changes to math operators, brackets, etc
},
]
}

%-----------------------------------------------------------------
% TeX Gyre Heros <- URW Nimbus Sans L <- Helvetica
% TODO: merge Heros and Heroscn?

\NewDocumentCommand {\HerosSansFont} {} {
\setsansfont{texgyreheros}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-regular,
ItalicFont=*-italic,
BoldFont=*-bold,
BoldItalicFont=*-bolditalic,
SlantedFont=*-italic,
BoldSlantedFont=*-bolditalic,
%
% SmallCapsFont=*-regular,
% SmallCapsFeatures={
% %Letters=SmallCaps,
% },
%
FontFace={ul}{n}{*-regular},
FontFace={el}{n}{*-regular},
FontFace={l}{n}{*-regular},
FontFace={sl}{n}{*-regular},
FontFace={m}{n}{*-regular},
FontFace={sb}{n}{*-bold},
FontFace={b}{n}{*-bold},
FontFace={eb}{n}{*-bold},
FontFace={ub}{n}{*-bold},
%
FontFace={ul}{it}{*-italic},
FontFace={el}{it}{*-italic},
FontFace={l}{it}{*-italic},
FontFace={sl}{it}{*-italic},
FontFace={m}{it}{*-italic},
FontFace={sb}{it}{*-bolditalic},
FontFace={b}{it}{*-bolditalic},
FontFace={eb}{it}{*-bolditalic},
FontFace={ub}{it}{*-bolditalic},
%
FontFace={ul}{sl}{*-italic},
FontFace={el}{sl}{*-italic},
FontFace={l}{sl}{*-italic},
FontFace={sl}{sl}{*-italic},
FontFace={m}{sl}{*-italic},
FontFace={sb}{sl}{*-bolditalic},
FontFace={b}{sl}{*-bolditalic},
FontFace={eb}{sl}{*-bolditalic},
FontFace={ub}{sl}{*-bolditalic},
%
Ligatures={Common,TeX},
Scale=1.0,
RawFeature={
+zero, % slashed zero
},
StylisticSet={
1, % stylistic alternatives, like small super (c)
10,% slight changes to math operators, brackets, etc
},
]
}

\NewDocumentCommand {\HerosCondensedSansFont} {} {
\setsansfont{texgyreheroscn-regular.otf}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-regular,
ItalicFont=*-italic,
BoldFont=*-bold,
BoldItalicFont=*-bolditalic,
SlantedFont=*-italic,
BoldSlantedFont=*-bolditalic,
%
% SmallCapsFont=*-regular,
% SmallCapsFeatures={
% %Letters=SmallCaps,
% },
%
FontFace={ul}{n}{*-regular},
FontFace={el}{n}{*-regular},
FontFace={l}{n}{*-regular},
FontFace={sl}{n}{*-regular},
FontFace={m}{n}{*-regular},
FontFace={sb}{n}{*-bold},
FontFace={b}{n}{*-bold},
FontFace={eb}{n}{*-bold},
FontFace={ub}{n}{*-bold},
%
FontFace={ul}{it}{*-italic},
FontFace={el}{it}{*-italic},
FontFace={l}{it}{*-italic},
FontFace={sl}{it}{*-italic},
FontFace={m}{it}{*-italic},
FontFace={sb}{it}{*-bolditalic},
FontFace={b}{it}{*-bolditalic},
FontFace={eb}{it}{*-bolditalic},
FontFace={ub}{it}{*-bolditalic},
%
FontFace={ul}{sl}{*-italic},
FontFace={el}{sl}{*-italic},
FontFace={l}{sl}{*-italic},
FontFace={sl}{sl}{*-italic},
FontFace={m}{sl}{*-italic},
FontFace={sb}{sl}{*-bolditalic},
FontFace={b}{sl}{*-bolditalic},
FontFace={eb}{sl}{*-bolditalic},
FontFace={ub}{sl}{*-bolditalic},
%
Ligatures={Common,TeX},
Scale=1.0,
RawFeature={
+zero, % slashed zero
},
StylisticSet={
1, % stylistic alternatives, like small super (c)
10,% slight changes to math operators, brackets, etc
},
]
}

%-----------------------------------------------------------------
% Kp fonts
%-----------------------------------------------------------------
% https://ctan.org/pkg/kpfonts-otf
% Version 0.34 2021-01-30
% Licenses  The LATEX Project Public License 1.3
% The SIL Open Font License
% Possiblly a harmonius set to use for all fonts
% version 7.040 2021-03-01

\NewDocumentCommand {\KpSansSansFont} {} {
\setsansfont{KpSans}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%SmallcapsFont=*SC,
% %FontFace={ul}{sc}{*SC-Hairline},
% FontFace={ul}{sc}{*SC-Thin},
% FontFace={el}{sc}{*SC-Extralight},
% FontFace={l}{sc}{*SC-Light},
% FontFace={sl}{sc}{*SC-Semilight},
% %FontFace={m}{sc}{*SC-Book},
% FontFace={m}{sc}{*SC-Regular},
% %FontFace={m}{sc}{*SC-Medium},
% FontFace={sb}{sc}{*SC-Semibold},
% FontFace={b}{sc}{*SC-Bold},
% FontFace={eb}{sc}{*SC-Ultrabold},
% FontFace={ub}{sc}{*SC-Heavy},
% %FontFace={ub}{sc}{*SC-Black},
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
%
Numbers={OldStyle,Proportional},
StylisticSet={
1, % ligatures
},
RawFeature={
+case, % case sensitive forms
+onum, % oldstyle figures (digits)
+swsh, % long tailed Q
},
]
}

%-----------------------------------------------------------------
% https://github.com/CatharsisFonts/Ysabeau
% 2021-03-01
% OFL-1.1 License
% YsabeautInfant, YsabeauOffice, YsabeauSC,...?
% TODO: Ysabeau In progress --- better alternative?

\NewDocumentCommand {\YsabeauSansFont} {} {
\setsansfont{Ysabeau}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
% UprightFont=*-Medium,
% ItalicFont=*-MediumItalic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%SmallcapsFont=*SC,
%FontFace={ul}{sc}{*SC-Hairline},
FontFace={ul}{sc}{*SC-Thin},
FontFace={el}{sc}{*SC-Extralight},
FontFace={l}{sc}{*SC-Light},
FontFace={sl}{sc}{*SC-Semilight},
%FontFace={m}{sc}{*SC-Book},
FontFace={m}{sc}{*SC-Regular},
%FontFace={m}{sc}{*SC-Medium},
FontFace={sb}{sc}{*SC-Semibold},
FontFace={b}{sc}{*SC-Bold},
FontFace={eb}{sc}{*SC-Ultrabold},
FontFace={ub}{sc}{*SC-Heavy},
%FontFace={ub}{sc}{*SC-Black},
%
%FontFace={ul}{n}{*-Hairline},
FontFace={ul}{n}{*-Thin},
FontFace={el}{n}{*-Extralight},
FontFace={l}{n}{*-Light},
FontFace={sl}{n}{*-Semilight},
%FontFace={m}{n}{*-Book},
FontFace={m}{n}{*-Regular},
%FontFace={m}{n}{*-Medium},
FontFace={sb}{n}{*-Semibold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Ultrabold},
FontFace={ub}{n}{*-Heavy},
%FontFace={ub}{n}{*-Black},
%
%FontFace={ul}{it}{*-HairlineItalic},
FontFace={ul}{it}{*-ThinItalic},
FontFace={el}{it}{*-ExtralightItalic},
FontFace={l}{it}{*-LightItalic},
FontFace={sl}{it}{*-SemilightItalic},
FontFace={m}{it}{*-Italic},
%FontFace={m}{it}{*-MediumItalic},
FontFace={sb}{it}{*-SemiboldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
%FontFace={ul}{sl}{*-HairlineItalic},
FontFace={ul}{sl}{*-ThinItalic},
FontFace={el}{sl}{*-ExtralightItalic},
FontFace={l}{sl}{*-LightItalic},
FontFace={sl}{sl}{*-SemilightItalic},
FontFace={m}{sl}{*-Italic},
%FontFace={m}{sl}{*-MediumItalic},
FontFace={sb}{sl}{*-SemiboldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
%
StylisticSet = {
% 1, % tighter capitals, etc.
2, % rounder capitals, etc.
% 3, % rounded a, etc
% 4, % a^e instead of \"{a}
% 5, % ?
% 6, % ?
9, % delta?
% 10, % cyrillic alternates
% 12, % ?
13, % better accents on capitals
% 14, % cyrillic alternates
15, % long dagger
},
Numbers={OldStyle,Proportional},
RawFeature={+zero}, % slashed (actually dotted) zero
]
}

%-----------------------------------------------------------------
% URW Classico
% %% URW Classico is a clone of Optima, available at
% %% https://www.ctan.org/pkg/classico
% %% It is gratis, but has a restrictive license.
% \setsansfont{URW Classico}[
%    Ligatures={Common,TeX}]

%-----------------------------------------------------------------
% mono fonts
% TODO: what about sans vs serifs?
%-----------------------------------------------------------------
% Fira Code <- Fira Mono <- Metal
% https://github.com/tonsky/FiraCode
% OFL-1.1 License
% 5.2 Jun 12, 2020

% \usepackage{fontspec}
% \setmonofont{FiraCode-Regular.otf}[
% BoldFont=FiraCode-Bold.otf,
% Contextuals=Alternate % Activate the calt feature
% ]
% \usepackage{xcolor}
% \usepackage{listings}
% \usepackage[verbatim]{lstfiracode} % Activate ligatures in verbatim
% \lstset{
% language=C++,
% style=FiraCodeStyle, % Use predefined FiraCodeStyle
% basicstyle=\ttfamily, % Use \ttfamily for source code listings
% commentstyle=\color{orange}
% }

\NewDocumentCommand {\FiraCodeMonoFont} {} {
\setmonofont{FiraCode}[
Scale=MatchLowercase,
%Scale=MatchUppercase,
Extension=.ttf,
UprightFont=*-Regular,
BoldFont=*-Bold,
AutoFakeSlant,
ItalicFeatures={FakeSlant},
BoldItalicFeatures={FakeSlant},
FontFace={ul}{n}{*-Light},
FontFace={el}{n}{*-Light},
FontFace={l}{n}{*-Light},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Retina},
FontFace={sb}{n}{*-Medium},
FontFace={b}{n}{*-SemiBold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
% TODO: what is 'Retina'?
StylisticSet = {},
RawFeature={
%+aalt, % all alternates
+calt, % contextual alternatives
+case, % case sensitive parens, etc.
+onum, % oldstyle digits
+salt, % stylistic alternates
+zero ,% slashed (actually dotted) zero
}, 
]
}
%-----------------------------------------------------------------
% https://github.com/googlefonts/inconsolata
% OFL-1.1 License
% 2021-03-01

\NewDocumentCommand {\InconsolataMonoFont} {} {
\setmonofont{Inconsolata}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=Inconsolata-Medium,
ItalicFont=Inconsolata-CondensedMedium,
BoldFont=Inconsolata-Bold,
BoldItalicFont=Inconsolata-CondensedBold,
SlantedFont=Inconsolata-CondensedRegular,
BoldSlantedFont=Inconsolata-CondensedBold,
% SmallcapsFont=Inconsolata,
% SmallCapsFeatures={
% Letters=SmallCaps,
% FontFace={ul}{sc}{*-ExtraLight},
% FontFace={el}{sc}{*-ExtraLight},
% FontFace={l}{sc}{*-Light},
% FontFace={sl}{sc}{*-Regular},
% FontFace={m}{sc}{*-Medium},
% FontFace={sb}{sc}{*-SemiBold},
% FontFace={b}{sc}{*-Bold},
% FontFace={eb}{sc}{*-Black},
% FontFace={ub}{sc}{*-Black},
%
FontFace={ul}{n}{*-ExtraLight},
FontFace={el}{n}{*-ExtraLight},
FontFace={l}{n}{*-Light},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Medium},
FontFace={sb}{n}{*-SemiBold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Black},
FontFace={ub}{n}{*-Black},
% no italic or slanted faces, try condensed
% TODO: FakeSlant?
% TODO: define 'emphasis', 'parameter' faces?
FontFace={ul}{it}{*-CondensedExtraLight},
FontFace={el}{it}{*-CondensedExtraLight},
FontFace={l}{it}{*-CondensedLight},
FontFace={sl}{it}{*-CondensedRegular},
FontFace={m}{it}{*-CondensedMedium},
FontFace={sb}{it}{*-CondensedSemiBold},
FontFace={b}{it}{*-CondensedBold},
FontFace={eb}{it}{*-CondensedBlack},
FontFace={ub}{it}{*-CondensedBlack},
%
FontFace={ul}{it}{*-CondensedExtraLight},
FontFace={el}{it}{*-CondensedExtraLight},
FontFace={l}{it}{*-CondensedLight},
FontFace={sl}{it}{*-CondensedRegular},
FontFace={m}{it}{*-CondensedMedium},
FontFace={sb}{it}{*-CondensedSemiBold},
FontFace={b}{it}{*-CondensedBold},
FontFace={eb}{it}{*-CondensedBlack},
FontFace={ub}{it}{*-CondensedBlack},
StylisticSet = {
% 1, % different *, ~, etc.
%2, % unslashed zero
% 3, % slanted quotes
},
RawFeature={+zero}, % slashed (actually dotted) zero
]
}
%-----------------------------------------------------------------
% Kp fonts
%-----------------------------------------------------------------
% https://ctan.org/pkg/kpfonts-otf
% Version 0.34 2021-01-30
% Licenses  The LATEX Project Public License 1.3
% The SIL Open Font License
% Possiblly a harmonius set to use for all fonts
% version 7.040 2021-03-01

\NewDocumentCommand {\KpMonoMonoFont} {} {
\setmonofont{KpMono}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%SmallcapsFont=*SC,
% %FontFace={ul}{sc}{*SC-Hairline},
% FontFace={ul}{sc}{*SC-Thin},
% FontFace={el}{sc}{*SC-Extralight},
% FontFace={l}{sc}{*SC-Light},
% FontFace={sl}{sc}{*SC-Semilight},
% %FontFace={m}{sc}{*SC-Book},
% FontFace={m}{sc}{*SC-Regular},
% %FontFace={m}{sc}{*SC-Medium},
% FontFace={sb}{sc}{*SC-Semibold},
% FontFace={b}{sc}{*SC-Bold},
% FontFace={eb}{sc}{*SC-Ultrabold},
% FontFace={ub}{sc}{*SC-Heavy},
% %FontFace={ub}{sc}{*SC-Black},
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-Italic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-Italic},
%
Numbers={OldStyle,Proportional},
StylisticSet={
},
RawFeature={
+case, % case sensitive forms
+onum, % oldstyle figures (digits)
+swsh, % long tailed Q
},
]
}

%-----------------------------------------------------------------
% Latin Modern Mono <- Computer Modern
% https://ctan.org/pkg/lm
% Home page http://www.gust.org.pl/projects/e-foundry/latin-modern
% Version 2.004
% Licenses  The GUST Font License (GFL)
% 2009-10-30

% TODO: 8, 9, 10, 12 ,17 size fonts for differing faces?

\NewDocumentCommand {\LatinModernMonoFont} {} {
\setmonofont{lmmonolt10}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-regular,
ItalicFont=*-oblique,
BoldFont=*-bold,
BoldItalicFont=*-boldoblique,
SlantedFont=*-oblique,
BoldSlantedFont=*-boldoblique,
%
% FontFace={ul}{sc}{*-Thin},
% FontFace={el}{sc}{*-Extralight},
% FontFace={l}{sc}{*-Light},
% FontFace={sl}{sc}{*-Semilight},
% FontFace={m}{sc}{*-Book},
% FontFace={m}{sc}{*-Regular},
% FontFace={sb}{sc}{*-Semibold},
% FontFace={b}{sc}{*-Bold},
% FontFace={eb}{sc}{*-Ultrabold},
% FontFace={ub}{sc}{*-Heavy},
%
FontFace={ul}{n}{*-regular},
FontFace={el}{n}{*-regular},
FontFace={l}{n}{*-regular},
FontFace={sl}{n}{*-regular},
FontFace={m}{n}{*-regular},
FontFace={sb}{n}{*-bold},
FontFace={b}{n}{*-bold},
FontFace={eb}{n}{*-bold},
FontFace={ub}{n}{*-bold},
%
FontFace={ul}{it}{*-oblique},
FontFace={el}{it}{*-oblique},
FontFace={l}{it}{*-oblique},
FontFace={sl}{it}{*-oblique},
FontFace={m}{it}{*-oblique},
FontFace={sb}{it}{*-boldoblique},
FontFace={b}{it}{*-boldoblique},
FontFace={eb}{it}{*-boldoblique},
FontFace={ub}{it}{*-boldoblique},
%
FontFace={ul}{sl}{*-oblique},
FontFace={el}{sl}{*-oblique},
FontFace={l}{sl}{*-oblique},
FontFace={sl}{sl}{*-oblique},
FontFace={m}{sl}{*-oblique},
FontFace={sb}{sl}{*-boldoblique},
FontFace={b}{sl}{*-boldoblique},
FontFace={eb}{sl}{*-boldoblique},
FontFace={ub}{sl}{*-boldoblique},
%
Numbers={OldStyle,Proportional},
Ligatures={Common,TeX},
RawFeature={
+zero, % slashed zero
},
]
}
%-----------------------------------------------------------------
% https://github.com/alerque/libertinus
% OFL-1.1 License
% Possiblly a harmonius set to use for all fonts
% version 7.040 2021-03-01

\NewDocumentCommand {\LibertinusMonoFont} {} {
\setmonofont{LibertinusMono}[
Extension=.otf,
UprightFont=*-Regular,
% no other variations
Numbers={OldStyle,Proportional},
StylisticSet={
1, % umlauts
},
RawFeature={
+zero, % slashed zero
},
]
}

%-----------------------------------------------------------------
% NewComputerModern
% https://ctan.org/pkg/newcomputermodern
%   The GUST Font License (GFL)

% No bold small caps as of 2021-02-24
\NewDocumentCommand {\NewComputerModernMonoFont} {} {
\setmonofont{NewCMMono10}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldOblique,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldOblique,
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Book},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BookItalic},
FontFace={b}{it}{*-BoldOblique},
FontFace={eb}{it}{*-BoldOblique},
FontFace={ub}{it}{*-BoldOblique},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BookItalic},
FontFace={b}{sl}{*-BoldOblique},
FontFace={eb}{sl}{*-BoldOblique},
FontFace={ub}{sl}{*-BoldOblique},
%
Numbers={OldStyle,Proportional},
StylisticSet={
%1, % re-arrange capital diacritics
},
RawFeature={
+case, % case-sensitive alternatives
+zero, % slashed zero
},
]
}

%-----------------------------------------------------------------
% TeX Gyre Fonts
% https://ctan.org/pkg/tex-gyre?lang=en
% Version 2.501 2018-06-17
% Licenses  The GUST Font License (GFL)
%-----------------------------------------------------------------
% TeX Gyre Cursor <- URW Nimbus Mono L <- Courier

\NewDocumentCommand {\CursorMonoFont} {} {
\setmonofont{texgyrecursor}[
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-regular,
ItalicFont=*-italic,
BoldFont=*-bold,
BoldItalicFont=*-bolditalic,
SlantedFont=*-italic,
BoldSlantedFont=*-bolditalic,
%
% SmallCapsFont=*-regular,
% SmallCapsFeatures={
% %Letters=SmallCaps,
% },
%
FontFace={ul}{n}{*-regular},
FontFace={el}{n}{*-regular},
FontFace={l}{n}{*-regular},
FontFace={sl}{n}{*-regular},
FontFace={m}{n}{*-regular},
FontFace={sb}{n}{*-bold},
FontFace={b}{n}{*-bold},
FontFace={eb}{n}{*-bold},
FontFace={ub}{n}{*-bold},
%
FontFace={ul}{it}{*-italic},
FontFace={el}{it}{*-italic},
FontFace={l}{it}{*-italic},
FontFace={sl}{it}{*-italic},
FontFace={m}{it}{*-italic},
FontFace={sb}{it}{*-bolditalic},
FontFace={b}{it}{*-bolditalic},
FontFace={eb}{it}{*-bolditalic},
FontFace={ub}{it}{*-bolditalic},
%
FontFace={ul}{sl}{*-italic},
FontFace={el}{sl}{*-italic},
FontFace={l}{sl}{*-italic},
FontFace={sl}{sl}{*-italic},
FontFace={m}{sl}{*-italic},
FontFace={sb}{sl}{*-bolditalic},
FontFace={b}{sl}{*-bolditalic},
FontFace={eb}{sl}{*-bolditalic},
FontFace={ub}{sl}{*-bolditalic},
%
Ligatures={Common,TeX},
Scale=1.0,
RawFeature={
+zero, % slashed zero
},
StylisticSet={
1, % stylistic alternatives, like small super (c)
10,% slight changes to math operators, brackets, etc
},
]
}

%-----------------------------------------------------------------
% blackletter/fraktur fonts
% TODO: rationalize serif/sans/mono/fraktur/etc dimensions
% TODO: \setBlackLetterFont?
%-----------------------------------------------------------------
% QTHeidelbergType 
% https://ctan.org/pkg/qualitype
% Version 2019-12-26
% Licenses  GNU General Public License, version 2 or newer
% The SIL Open Font License
% Copyright 1992 Qualitype

\NewDocumentCommand {\QTHeidelbergBlackLetterFont} {} {
\newfontfamily\BlackLetterFont{QTHeidelbergType}[
Path= c:/windows/fonts/ ,
Extension=.otf,
Ligatures={Common,TeX},
Numbers={OldStyle,Proportional},
Scale=MatchLowercase,
]
}

%-----------------------------------------------------------------

\DeclareTextFontCommand{\textBlackLetter}{\BlackLetterFont}

%-----------------------------------------------------------------
% math fonts
%-----------------------------------------------------------------
% https://tex.stackexchange.com/questions/457630/what-font-is-this-exactly-asana-math
% \setmainfont{Fira Sans Light}[
%      Numbers       = OldStyle,
%      BoldFont      = Fira Sans Medium,
%      ItalicFont    = Fira Sans Light Italic,
%      BoldItalicFont= Fira Sans Medium Italic]
% \setsansfont{Fira Sans Light}[
%      Numbers       = OldStyle,
%      BoldFont      = Fira Sans Medium,
%      ItalicFont    = Fira Sans Light Italic,
%      BoldItalicFont= Fira Sans Medium Italic]
% % For source code
% \setmonofont{Source Code Pro Light}[
%      BoldFont=Source Code Pro]
% 
% %% Math font
% \setmathfont{Asana Math} % or some other suitable font
% https://tex.stackexchange.com/questions/350749/sans-and-monospace-font-match-for-stix-two
% TeX Gyre Pagella is a clone of Palatino.  
% You can use the real thing if you have it. 
% Windows and MacOS both do.
% \setmainfont{TeX Gyre Pagella}[
%    Ligatures={Common,TeX},
%    Scale=1.0]
% %% URW Classico is a clone of Optima, available at
% %% https://www.ctan.org/pkg/classico
% %% It is gratis, but has a restrictive license.
% \setsansfont{URW Classico}[
%    Ligatures={Common,TeX}]
% \setmonofont{Inconsolata}
% \setmathfont{Asana Math}
% %% Neo Euler is available at
% %% https://github.com/khaledhosny/euler-otf
% %% This lets you use, for example, \symup{e} and \symup{i}
% %% for the constants.  It does not cover lowercase \mathcal.
% \setmathfont{Neo Euler}[
%   range={up,bfup,cal,bfcal,frak,bffrak}]
% %% If you need \mathscr distinct from \mathcal:
% \setmathfont{STIX Two Math}[
%   range={scr,bfscr},
%   StylisticSet=1,
%   Scale=MatchUppercase]
%
%-----------------------------------------------------------------
% Asana
%
% https://www.ctan.org/tex-archive/fonts/Asana-Math/
% Version 000.958 2019-04-14
% Licenses  The SIL Open Font License
%
% missing \mathhypen, so try to grab from XITS?

\NewDocumentCommand {\AsanaMathFont} {} {
\setmathfont{Asana-Math.otf}[
Path= c:/windows/fonts/ ,
Numbers={OldStyle,Proportional},]
%\setmathfont{XITSMath-Regular.otf}[range={``2010}]%\mathhyphen
\setmathfont{XITSMath-Regular.otf}[
Path= c:/windows/fonts/ ,
range={\mathhyphen,},]
%\setmathfont{Asana-Math.otf}[Numbers={OldStyle,Proportional},]
}
%-----------------------------------------------------------------
% Erewhon Math  <- Heuristica <- Utopia
% https://ctan.org/pkg/erewhon% OFL-1.1 License
% Version 1.114 2021-02-26
% Licenses  The SIL Open Font License
% The LATEX Project Public License 1.3

\NewDocumentCommand {\ErewhonMathFont} {} {
\setmathfont{Erewhon-Math.otf}[
Path= c:/windows/fonts/ ,
Extension=.otf,
StylisticSet = {
4, % better inequalities
% 5, % smaller operators, eg, \in
6, % better set inclusion
% 7, % slanted \parallel
},
Numbers={OldStyle,Proportional},
]
}

%-----------------------------------------------------------------
% FiraMath <- FiraSans <- Metal
% https://github.com/bBoxType/FiraGO
% OFL-1.1 License
% FiraMath v0.3.4 Oct 15, 2020

\NewDocumentCommand {\FiraMathFont} {} {
\setmathfont{FiraMath-Regular.otf}[
Extension=.otf,
RawFeature={
+ssty, % something about quotes
%+dtls, % something about ij
},
StylisticSet={
1, % upright integrals
2, % horizontal h-bar
3, % rounder C
},
%Numbers={OldStyle,Proportional},
]
}
%-----------------------------------------------------------------
% https://github.com/YuanshengZhao/Garamond-Math
% OFL-1.1 License
% 2021-03-01

\NewDocumentCommand {\GaramondMathFont} {} {
\setmathfont{Garamond-Math}[
Extension=.otf,
StylisticSet = {
1, % rounded blackboard
2, % curved partial
3, % scaled CM script --- cleaner than ss08
4, % semi-bold for bold
% 5, % extra bold for bold
6, % horizontal h-bar etc.
% 7, % inversion symmetry for \int
% 8, % experimental Garamond compatible script chars
9, % normal tilde
10, % outbending italic h
11, % larger binary operators --- not always better
},
Numbers={OldStyle,Proportional},
]
}

%-----------------------------------------------------------------
% GFS Neohellenic Math <- Computer Modern Bright?
% GFS Didot mentioned in description
% https://greekfontsociety-gfs.gr/typefaces/Math
% OFL 1.1
% no version, downloaded 2021-03-03

\NewDocumentCommand {\GFSNeohellenicMathFont} {} {
\setmathfont{GFSNeohellenicMath.otf}[
Numbers={OldStyle,Proportional},
]
}
%-----------------------------------------------------------------
% Kp fonts
%-----------------------------------------------------------------
% https://ctan.org/pkg/kpfonts-otf
% Version 0.34 2021-01-30
% Licenses  The LATEX Project Public License 1.3
% The SIL Open Font License
% Possiblly a harmonius set to use for all fonts
% version 7.040 2021-03-01

% TODO: select characters for appropriate ranges from KpMath-Sans,
% etc.
\NewDocumentCommand {\KpMathMathFont} {} {
\setmathfont{KpMath-Regular.otf}[
Path= c:/windows/fonts/ ,
Extension=.otf,
Numbers={OldStyle,Proportional},
StylisticSet={
1, % simpler script capitals
%2, % sans \mathbb
3, % integral kerning
4, % better leq, etc.
%5, % smaller \parallel
6, % better subseteq
%7, % slanted \parallel
},
RawFeature={
%+cv00, % fraktur I, R -> Im, Re
+cv01, % horizontal h-bar
+cv02, % narrow slashed zero
% other cvXX seem to be swaping various greek letter forms
+onum, % oldstyle figures (digits)
},
]
}

\NewDocumentCommand {\KpSansMathFont} {} {
\setmathfont{KpMath-Sans}[
Extension=.otf,
Numbers={OldStyle,Proportional},
StylisticSet={
1, % simpler script capitals
2, % sans \mathbb
3, % integral kerning
4, % better leq, etc.
%5, % smaller \parallel
6, % better subseteq
%7, % slanted \parallel
},
RawFeature={
%+cv00, % fraktur I, R -> Im, Re
+cv01, % horizontal h-bar
+cv02, % narrow slashed zero
% other cvXX seem to be swaping various greek letter forms
+onum, % oldstyle figures (digits)
},
]
}

%-----------------------------------------------------------------
% http://www.gust.org.pl/projects/e-foundry/lm-math
% GUST Font License (GFL)
% Possiblly a harmonius set to use for all fonts
% version 1959 circa 2014-10-05

\NewDocumentCommand {\LatinModernMathFont} {} {
\setmathfont{latinmodern-math.otf}[
Numbers={OldStyle,Proportional},
StylisticSet={
},
RawFeature={
%+alts, % allk alernates
%+dlts, % i j
%+ssty, % math script alternates
},
]
}

%-----------------------------------------------------------------
% Build a math font by combining others, to my taste.
% Start with XITS

\NewDocumentCommand {\LegibleMathFont} {} {
\setmathfont{XITSMath-Regular.otf}[
Numbers={OldStyle},
StylisticSet = {
1, % simpler script
2, % sans greek
8, % upright integrals
9, % upright slashed logical operators
10, % horizontal h-bar
},
]
\setmathfont{AtkinsonHyperlegible-Regular.otf}[
RawFeature={+case,},
range={sfup,}
]
\setmathfont{AtkinsonHyperlegible-Italic.otf}[
RawFeature={+case,},
range={sfit,}
]
\setmathfont{AtkinsonHyperlegible-Bold.otf}[
RawFeature={+case,},
range={bfsfup,}
]
\setmathfont{AtkinsonHyperlegible-BoldItalic.otf}[
RawFeature={+case,},
range={bfsfit,}
]
}
%-----------------------------------------------------------------
% https://github.com/alerque/libertinus
% OFL-1.1 License
% Possiblly a harmonius set to use for all fonts
% version 7.040 2021-03-01

\NewDocumentCommand {\LibertinusMathFont} {} {
\setmathfont{LibertinusMath-Regular.otf}[
Numbers={OldStyle,Proportional},
StylisticSet={
8, % upright integrals
},
RawFeature={
+zero, % slashed zero
},
]
}

%-----------------------------------------------------------------
% NewComputerModern
% https://ctan.org/pkg/newcomputermodern
%   The GUST Font License (GFL)

\NewDocumentCommand {\NewComputerModernMathFont} {} {
\setmathfont{NewCMMath-Regular.otf}[
Numbers={OldStyle,Proportional},
StylisticSet={
%1, % ?
%2, % ?
},
]
}

\NewDocumentCommand {\NewComputerModernBookMathFont} {} {
\setmathfont{NewCMMath-Book.otf}[
Numbers={OldStyle,Proportional},
StylisticSet={
%1, % ?
%2, % ?
},
]
}

%-----------------------------------------------------------------
% TeX Gyre Math Fonts
% https://ctan.org/pkg/tex-gyre-math
% Version 2016-05-19
% Licenses  The GUST Font License (GFL)
%-----------------------------------------------------------------
% TeX Gyre Bonum Math <- URW Bookman L <- Bookman Old Style

\NewDocumentCommand {\BonumMathFont} {} {
\setmathfont{texgyrebonum-math.otf}[
Numbers={OldStyle,Proportional},
Ligatures={Common,TeX},
]
}

%-----------------------------------------------------------------
% TeX Gyre DejaVu Math <- Bitstream Vera
% Licensing for original dejavu fonts dubious
% non-math dejavu fonts don't seem to be available in otf

\NewDocumentCommand {\DejaVuMathFont} {} {
\setmathfont{texgyredejavu-math.otf}[
Numbers={OldStyle,Proportional},
Ligatures={Common,TeX},
]
}


%-----------------------------------------------------------------
% TeX Gyre Pagella <- URW Palladio L <- Palatino

\NewDocumentCommand {\PagellaMathFont} {} {
 \setmathfont{texgyrepagella-math.otf}[
Numbers={OldStyle,Proportional},
Ligatures={Common,TeX},
]
}

%-----------------------------------------------------------------
% TeX Gyre Schola <- URW Century Schoolbook L <- Century Schoolbook

\NewDocumentCommand {\ScholaMathFont} {} {
 \setmathfont{texgyreschola-math.otf}[
Numbers={OldStyle,Proportional},
Ligatures={Common,TeX},
]
}

%-----------------------------------------------------------------
% TeX Gyre Termes <- URW Nimbus Roman No9 L <- Times New Roman

\NewDocumentCommand {\TermesMathFont} {} {
\setmathfont{texgyretermes-math.otf}[
Numbers={OldStyle,Proportional},
Ligatures={Common,TeX},
]
}

%-----------------------------------------------------------------
% STIX Two
% https://github.com/stipub/stixfonts/
% https://www.stixfonts.org/
% STIX fonts are available for download at 
% https://github.com/stipub/stixfonts 
% and distributed under the SIL Open Font License, Version 1.1

\NewDocumentCommand {\STIXTwoMathFont} {} {
\setmathfont{STIXTwoMath-Regular.otf}[
Numbers={OldStyle,Proportional},
RawFeature={
+cv01, % horizontal lambda-bar
+cv02, % upright gamma?
+cv03, % slashed zero
},
StylisticSet={
1,
3, % horizontal h-bar, lambda-bar
4, % bigger quotes
8, % upright integrals
9, % upright not-operators
10, % compact leq, etc
11, % clearer not-subset, etc.
},
]
}

%-----------------------------------------------------------------
% Symbola - may have more symbol coverage than others.
% https://dn-works.com/ufas/
% License too restrictive to use comfortably:
% https://dn-works.com/wp-content/uploads/2020/UFAS-Docs/License.pdf
%-----------------------------------------------------------------
% XITS
% Times-like, accompanying main/math fonts
% Open Font License, version 1.1.
% https://github.com/alif-type/xits

\NewDocumentCommand {\XITSMathFont} {} {
\setmathfont{XITSMath-Regular.otf}[
Numbers={OldStyle,Proportional},
Ligatures=TeX,
StylisticSet = {
1, % simpler script
2, % sans greek
3, % ?
4, % ?
% 5, % bold bb
% 6, % slanted BB
% 7, % bold slanted bb
8, % upright integrals
9, % upright slashed logical operators
10, % horizontal h-bar
},
RawFeature={
+ssty, % bold quotes?
},
]
}

%-----------------------------------------------------------------
% programming language fonts
%-----------------------------------------------------------------
% TODO: customize in the font families below?

\newfontfamily\pseudocodeFont{AtkinsonHyperlegible}[
Scale=MatchLowercase,
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldItalic,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldItalic,
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Bold},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BoldItalic},
FontFace={b}{it}{*-BoldItalic},
FontFace={eb}{it}{*-BoldItalic},
FontFace={ub}{it}{*-BoldItalic},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BoldItalic},
FontFace={b}{sl}{*-BoldItalic},
FontFace={eb}{sl}{*-BoldItalic},
FontFace={ub}{sl}{*-BoldItalic},
%
RawFeature={
+case, % case sensitive forms
},
]

%-----------------------------------------------------------------
% 2021-04-30
% problems with FiraCode when it's not used via \setmonofont':
% depressed *, no ligatures

% \newfontfamily\clojureFont{FiraCode}[
% Scale=0.8,
% %Scale=MatchLowercase,
% %Scale=MatchUppercase,
% Extension=.ttf,
% UprightFont=*-Regular,
% BoldFont=*-Bold,
% AutoFakeSlant,
% ItalicFeatures={FakeSlant},
% BoldItalicFeatures={FakeSlant},
% FontFace={ul}{n}{*-Light},
% FontFace={el}{n}{*-Light},
% FontFace={l}{n}{*-Light},
% FontFace={sl}{n}{*-Regular},
% FontFace={m}{n}{*-Retina},
% FontFace={sb}{n}{*-Medium},
% FontFace={b}{n}{*-SemiBold},
% FontFace={eb}{n}{*-Bold},
% FontFace={ub}{n}{*-Bold},
% % TODO: what is 'Retina'?
% StylisticSet = {},
% RawFeature={
% %+aalt, % all alternates
% +calt, % contextual alternatives
% +case, % case sensitive parens, etc.
% +onum, % oldstyle digits
% +salt, % stylistic alternates
% +zero ,% slashed (actually dotted) zero
% }, 
% ]

% Fira Mono <- Metal
% https://fonts.google.com/specimen/Fira+Mono#glyphs
% OFL-1.1 License
% Version 3.206 Downloaded 2012-04-30

% 2021-04-30
% FIraMono has the same problems as FiraCode
% problems with FiraCode when it's not used via \setmonofont':
% depressed *, no ligatures

% \newfontfamily\clojureFont{FiraMono}[
% Scale=0.8,
% %Scale=MatchLowercase,
% %Scale=MatchUppercase,
% Extension=.ttf,
% UprightFont=*-Regular,
% BoldFont=*-Bold,
% AutoFakeSlant,
% ItalicFeatures={FakeSlant},
% BoldItalicFeatures={FakeSlant},
% SlantedFeatures={FakeSlant},
% BoldSlantedFeatures={FakeSlant},
% RawFeature={
% %+calt, % contextual alternatives
% %+case, % case sensitive parens, etc.
% %+onum, % oldstyle digits
% %+zero ,% slashed zero
% },
% ]

% Inconsolata too much inter-char space, even condensed 
% LibertinusMono looks terrible, like monspaced Baskerville 
% texgyrecursor too light
% KpMono too wide and stroke terminals to thin

% due to problems with FiraCode and newfontfamily,
% and ugliness of of the other mono fonts I have at present
% just use it via \setmonofont and \ttfamily (for now)
% Note: this mean \clojureFont will be whatever the 
% global mono font is.
% TODO: either find a work-around for the Fira problems
% or find another mono font I like.
 
\NewDocumentCommand {\clojureFont} {} {\ttfamily}

%-----------------------------------------------------------------

% same font as clojure, for now.
\NewDocumentCommand {\javaFont} {} {\clojureFont}

%-----------------------------------------------------------------
% Try to look like SICP, etc., book fonts

\newfontfamily\schemeFont{NewCMMono10}[
Scale=0.9,
Path= c:/windows/fonts/ ,
Extension=.otf,
UprightFont=*-Regular,
ItalicFont=*-Italic,
BoldFont=*-Bold,
BoldItalicFont=*-BoldOblique,
SlantedFont=*-Italic,
BoldSlantedFont=*-BoldOblique,
%
FontFace={ul}{n}{*-Regular},
FontFace={el}{n}{*-Regular},
FontFace={l}{n}{*-Regular},
FontFace={sl}{n}{*-Regular},
FontFace={m}{n}{*-Regular},
FontFace={sb}{n}{*-Book},
FontFace={b}{n}{*-Bold},
FontFace={eb}{n}{*-Bold},
FontFace={ub}{n}{*-Bold},
%
FontFace={ul}{it}{*-Italic},
FontFace={el}{it}{*-Italic},
FontFace={l}{it}{*-Italic},
FontFace={sl}{it}{*-Italic},
FontFace={m}{it}{*-Italic},
FontFace={sb}{it}{*-BookItalic},
FontFace={b}{it}{*-BoldOblique},
FontFace={eb}{it}{*-BoldOblique},
FontFace={ub}{it}{*-BoldOblique},
%
FontFace={ul}{sl}{*-Italic},
FontFace={el}{sl}{*-Italic},
FontFace={l}{sl}{*-Italic},
FontFace={sl}{sl}{*-Italic},
FontFace={m}{sl}{*-Italic},
FontFace={sb}{sl}{*-BookItalic},
FontFace={b}{sl}{*-BoldOblique},
FontFace={eb}{sl}{*-BoldOblique},
FontFace={ub}{sl}{*-BoldOblique},
%
%Numbers={OldStyle,Proportional},
StylisticSet={
%1, % re-arrange capital diacritics
},
RawFeature={
+case, % case-sensitive alternatives
+zero, % slashed zero
},
]
%-----------------------------------------------------------------
% cjk fonts
%-----------------------------------------------------------------
% TODO: customize in the font families below?
% TODO: what's the 'right' way to do CJK as of 2021?
\RequirePackage{xeCJK}[2020-02-19]
%\defaultCJKfontfeatures {⟨font features⟩}
% -Regular seems too light
\setCJKmainfont{NotoSerifCJKSC-Medium.otf}
\setCJKsansfont{NotoSansCJKSC-Medium.otf}
\setCJKmonofont{NotoSansMONOCJKSC-Regular.otf}
%-----------------------------------------------------------------
% font 'families' 
% attempt at harmonius main, sans, mono, math fonts
% TODO: separate titlefont?
%-----------------------------------------------------------------

\NewDocumentCommand {\AsanaFonts} {} {
 %\defaultfontfeatures{ Scale=MatchLowercase }
\PagellaMainFont
 % Optima -> Classico -> Biolinum -> Libertinus Sans
\LibertinusSansFont
\FiraCodeMonoFont
\QTHeidelbergBlackLetterFont
\AsanaMathFont
}
  
\NewDocumentCommand {\CormorantFonts} {} {
\CormorantMainFont
\YsabeauSansFont
\FiraCodeMonoFont
\QTHeidelbergBlackLetterFont
\GaramondMathFont
}

\NewDocumentCommand {\EBGaramondFonts} {} {
\EBGaramondPardoMainFont
%\GilliusADFSansFont
%\GilliusADFTwoSansFont
\AtkinsonHyperlegibleSansFont
\FiraCodeMonoFont
\QTHeidelbergBlackLetterFont
\GaramondMathFont
}

\NewDocumentCommand {\ErewhonFonts} {} {
\ErewhonMainFont
\LatinModernSansFont
\FiraCodeMonoFont
\QTHeidelbergBlackLetterFont
\ErewhonMathFont
}

\NewDocumentCommand {\FiraFonts} {} {
% TODO: what should happen when main font is sans?
\FiraGoMainFont
\FiraGoSansFont
\FiraCodeMonoFont
\QTHeidelbergBlackLetterFont
\FiraMathFont
}

\NewDocumentCommand {\GFSNeohellenicFonts} {} {
% TODO: How to distinguish sans and main?
% Use a less 'sans' font than Neohellenic?
%\GFSArtemisiaMainFont % needs scaling compared to NeoHellenic
%\GFSBodoniMainFont % needs scaling compared to NeoHellenic
\GFSDidotMainFont % ugly
%\GFSNeohellenicMainFont % nice, but no contrast with sans
\GFSNeohellenicSansFont
%% no GFS mono font?
\FiraCodeMonoFont
\QTHeidelbergBlackLetterFont
\GFSNeohellenicMathFont
}

\NewDocumentCommand {\KpFonts} {} {
\KpRomanMainFont
\KpSansSansFont
\KpMonoMonoFont
\QTHeidelbergBlackLetterFont
\KpMathMathFont
}

\NewDocumentCommand {\LatinModernFonts} {} {
\LatinModernMainFont
\LatinModernSansFont
\LatinModernMonoFont
\QTHeidelbergBlackLetterFont
\LatinModernMathFont
}

\NewDocumentCommand {\LegibleFonts} {} {
\LibertinusMainFont
\AtkinsonHyperlegibleSansFont
\FiraCodeMonoFont
\LegibleMathFont 
\QTHeidelbergBlackLetterFont
}
\NewDocumentCommand {\LibertinusFonts} {} {
% TODO: Libertinus Serif Display as title font?
% TODO: Libertinus Serif Initials as a drop cap font?
\LibertinusMainFont
\LibertinusSansFont
\LibertinusMonoFont
\LibertinusMathFont
\QTHeidelbergBlackLetterFont
}

\NewDocumentCommand {\NewComputerModernFonts} {} {
\NewComputerModernMainFont
\NewComputerModernSansFont
\NewComputerModernMonoFont
\NewComputerModernMathFont
\QTHeidelbergBlackLetterFont
}

%-----------------------------------------------------------------
% Tex Gyre Collections

% ugly:
\NewDocumentCommand {\BonumFonts} {} {
\BonumMainFont
%\AdventorSansFont
\HerosSansFont
%\HerosCondensedSansFont
\CursorMonoFont
\BonumMathFont
\QTHeidelbergBlackLetterFont
}

% ok: 
\NewDocumentCommand {\PagellaFonts} {} {
\PagellaMainFont
%\AdventorSansFont
\HerosSansFont
%\HerosCondensedSansFont
\CursorMonoFont
\PagellaMathFont
\QTHeidelbergBlackLetterFont
}

% pagella > schola > bonum
\NewDocumentCommand {\ScholaFonts} {} {
\ScholaMainFont
%\AdventorSansFont
\HerosSansFont
%\HerosCondensedSansFont
\CursorMonoFont
\ScholaMathFont
\QTHeidelbergBlackLetterFont
}

% termes ~ pagella > schola > bonum
\NewDocumentCommand {\TermesFonts} {} {
\TermesMainFont
%\AdventorSansFont
\HerosSansFont
%\HerosCondensedSansFont
\CursorMonoFont
\TermesMathFont
\QTHeidelbergBlackLetterFont
}

%-----------------------------------------------------------------
\NewDocumentCommand {\XITSFonts} {} {
\XITSMainFont
\GilliusADFTwoSansFont
\FiraCodeMonoFont
\XITSMathFont
\QTHeidelbergBlackLetterFont
}

\NewDocumentCommand {\STIXTwoFonts} {} {
\STIXTwoMainFont
\GilliusADFTwoSansFont
\FiraCodeMonoFont
\STIXTwoMathFont
\QTHeidelbergBlackLetterFont
}
%-----------------------------------------------------------------
% main fonts
%-----------------------------------------------------------------
% TODO: redefine \mdseries instead
% TODO: one command that maps face abbrev. to series and text cmds
 
% \DeclareRobustCommand{\ulseries}{\fontseries{ul}\selectfont}
% \DeclareTextFontCommand{\textul}{\ulseries}
% \DeclareRobustCommand{\elseries}{\fontseries{el}\selectfont}
% \DeclareTextFontCommand{\textel}{\elseries}
% \DeclareRobustCommand{\lseries}{\fontseries{l}\selectfont}
% \DeclareTextFontCommand{\textl}{\lseries}
\DeclareRobustCommand{\sbseries}{\fontseries{sb}\selectfont}
\DeclareTextFontCommand{\textsb}{\sbseries}
% \DeclareRobustCommand{\ebseries}{\fontseries{eb}\selectfont}
% \DeclareTextFontCommand{\texteb}{\ebseries}
% \DeclareRobustCommand{\ubseries}{\fontseries{ub}\selectfont}
% \DeclareTextFontCommand{\textub}{\ubseries}

%-----------------------------------------------------------------
% math packages
%-----------------------------------------------------------------
\RequirePackage{amsmath}[2020/09/23]
%\RequirePackage{amssymb}[2013/01/14] % should be covered by unicode-math
\RequirePackage{mathtools}[2020/03/24] % for \splitfrac
%-----------------------------------------------------------------
% math fonts
%-----------------------------------------------------------------
% https://tex.stackexchange.com/questions/425098/which-opentype-math-fonts-are-available
% It is often a good idea to set up subscripts, superscripts, 
% sub-subscripts and super-superscripts to use a smaller optical 
% size, to make it more legible at smaller sizes. There are three 
% methods. There might be a companion font designed for smaller 
% sizes. which you would load with script-font=. (The commercial 
% font Aldus is intended as this for Palatino.) 
% Many fonts, including Latin Modern and all the TeX Gyre fonts, 
% come with different optical sizes and you can select a smaller
%  one, e.g. script-features={OpticalSize=8}, 
%  sscript-features={OpticalSize=6}. Finally, math fonts support 
%  the font features 
%  script-features={Script=Math, Style=MathScript},
%   sscript-features={Script=Math, Style=MathScriptScript}.

% TODO: problems from using 'version' option to \setmathfont
% might be useful to track down, seems to enable
% switching fonts within a file

% Notes from unicode-math.pdf:
%
% Alphabet ranges:
% up , it , bb , bbit , scr , cal , bfcal , frak , tt , sfup ,
% sfit , bfup , bfit , bfscr , bffrak , bfsfup , bfsfit

% \setmathfont{GFS Neohellenic Math}[Scale=MatchLowercase]
% % no light or semibold, use condensed and regular, or regular and bold
% \setmathfont{GilliusADFNo2-Cond}[range={sfup},Scale=1.05]
% \setmathfont{GilliusADFNo2-Regular}[range=bfsfup,Scale=1.05]
% %\setmathfont{GilliusADFNo2-Bold}[range=bfsfup,Scale=MatchLowercase]

%-----------------------------------------------------------------
%  math sans fonts
%-----------------------------------------------------------------
% no light or semibold, use condensed and regular, or regular and bold
% \setmathfont{GilliusADFNo2-Cond}[range={sfup},Scale=1.05]
% \setmathfont{GilliusADFNo2-Regular}[range=bfsfup,Scale=1.05]
%\setmathfont{GilliusADFNo2-Bold}[range=bfsfup,Scale=MatchLowercase]

% proprietary, comes with Windows 10
% \setmathfont{Gill Sans Nova Light}[range={sfup},]
% \setmathfont{Gill Sans Nova}[range={bfsfup},]

% proprietary, comes with Windows 10
% condensed is too condensed
% \setmathfont{Gill Sans MT Condensed}[range={sfup},]
% \setmathfont{Gill Sans MT}[range={bfsfup},]

% only regluar:
%\setmathfont{GFS Neohellenic Math}[range={sfup,bfsfup},Scale=MatchLowercase]
%-----------------------------------------------------------------
% Cambria
%-----------------------------------------------------------------
% with Windows 10

% works (no obvious missing symbols in font.tex):
%\setmathfont{Cambria Math}

% lots of missing symbols
%\setmathfont{Cambria Math}[version=cambria]

%-----------------------------------------------------------------
% non-math 'symbols'

\NewDocumentCommand{\TODO}{}{{\textbf{\textsf{TODO: }}}}
\NewDocumentCommand{\NOTE}{}{{\textbf{\textsf{NOTE: }}}}
%-----------------------------------------------------------------
% local math symbol defs 
% TODO: replace by or incorporate glossary entries?
% TODO: automatic indexing?
%-----------------------------------------------------------------
\NewDocumentCommand{\Godel}{}{G\"{o}del}
\NewDocumentCommand{\Gottingen}{}{G\"{o}ttingen}
%-----------------------------------------------------------------
% automate use of greek letters for flexible symbol typing, 
% eg: \Vertex(a) -> \alpha or \Vertex(a) -> \mathsf{a}
\ExplSyntaxOn
\NewDocumentCommand{\toGreek}{m}
 {
  \str_case:nn { #1 }
   {
    {a}{\alpha}
    {b}{\beta}
    {c}{\varsigma}
    {d}{\delta}
    {e}{\varepsilon}
    {f}{\varphi}
    {g}{\gamma}
    {h}{\eta}
    {i}{\iota}
    {j}{\vartheta}
    {k}{\kappa}
    {l}{\lambda}
    {m}{\mu}
    {n}{\nu}
    {o}{o}
    {p}{\pi}
    {q}{\chi}
    {r}{\rho}
    {s}{\sigma}
    {t}{\tau}
    {u}{\upsilon}
    {v}{\nu}
    {w}{\omega}
    {x}{\xi}
    {y}{\psi}
    {z}{\zeta}
    {A}{\mathrm{A}}
    {B}{\mathrm{B}}
    {C}{\Sigma}
    {D}{\Delta}
    {E}{\mathrm{E}}
    {F}{\Phi}
    {G}{\Gamma}
    {H}{\mathrm{H}}
    {I}{\mathrm{I}}
    {J}{\Theta}
    {K}{\mathrm{K}}
    {L}{\Lambda}
    {M}{\mathrm{M}}
    {N}{\mathrm{N}}
    {O}{\mathrm{O}}
    {P}{\Pi}
    {Q}{\mathrm{X}}
    {R}{\mathrm{P}}
    {S}{\Sigma}
    {T}{\mathrm{T}}
    {U}{\Upsilon}
    %{V}{}
    {W}{\Omega}
    {X}{\Xi}
    {Y}{\Psi}
    {Z}{\mathrm{Z}}
   }
 }
\ExplSyntaxOff
%-----------------------------------------------------------------
% category graphs
\NewDocumentCommand{\vertices}{} 
{\ensuremath{\mathsf{vertices}}\index{vertices@\textsf{vertices}}}
\NewDocumentCommand{\edges}{}{
\ensuremath{\mathsf{edges}}\index{edges@\textsf{edges}} }
\NewDocumentCommand{\faces}{}{
\ensuremath{\mathsf{faces}}\index{edges@\textsf{faces}} }
\NewDocumentCommand{\compose}{}{
\ensuremath{\mathsf{compose}}\index{compose@\textsf{compose}} }
\NewDocumentCommand{\comop}{}
{\ensuremath{\circ}\index{compose operation $\circ$} }
\NewDocumentCommand{\identity}{}{
\ensuremath{\mathsf{identity}}\index{identity@\textsf{identity}} }
\NewDocumentCommand{\head}{}
{\ensuremath{\mathsf{head}}\index{head@\textsf{head}} }
\NewDocumentCommand{\tail}{}
{\ensuremath{\mathsf{tail}}\index{tail@\textsf{tail}} }
\NewDocumentCommand{\pvalue}{}{
\ensuremath{\mathsf{value}\index{value@(path) \textsf{value}}} }
\NewDocumentCommand{\concatenate}{}
{\ensuremath{
 \mathsf{concatenate}}\index{concatenate@\textsf{concatenate}} }
\NewDocumentCommand{\conop}{}
{\ensuremath{\odot}\index{concat operation $\odot$} } 
\NewDocumentCommand{\peq}{}
{\ensuremath{\simeq}\index{path equivalence $\simeq$} }
%-----------------------------------------------------------------
% logic
\NewDocumentCommand{\liff}{}{\iff}
%-----------------------------------------------------------------
% linear spaces
\NewDocumentCommand{\scalars}{}{\mathsf{scalars}}
\NewDocumentCommand{\vectors}{}{\mathsf{vectors}}
%-----------------------------------------------------------------
\NewDocumentCommand{\OneToOne}{}{{\text{one-to-one}}}
% TODO: just type in unicode directly instead?
\NewDocumentCommand{\Set}{m}{\symscr{#1}}
\NewDocumentCommand{\Space}{m}{\symbb{#1}}
\NewDocumentCommand{\Naturals}{}{\Space{N}}
\NewDocumentCommand{\Integers}{}{\Space{Z}}
\NewDocumentCommand{\Reals}{}{\Space{R}}
\NewDocumentCommand{\Quaternions}{}{\Space{Q}}

% Note: unicode-math
% \symXXX for single char symbols
% \mathXXX for multi-char names

\NewDocumentCommand{\Vector}{m}{\symsfup{#1}}
\NewDocumentCommand{\Point}{m}{\symbfsf{#1}}

% TODO:
% ambiguous: either value of fn is linear or affine,
% or fn is linear or affine?
% just use Pseudocode formatting for all fns?

\NewDocumentCommand{\Linear}{m}{\mathsfup{#1}}
\NewDocumentCommand{\Affine}{m}{\mathbfsf{#1}}

\NewDocumentCommand{\Pseudocode}{m}{\mathsfup{#1}}

\DeclareMathOperator{\domain}{\Pseudocode{domain}}
\DeclareMathOperator{\codomain}{\Pseudocode{codomain}}
% \DeclareMathOperator{\domain}{\Set{Dom}}
% \DeclareMathOperator{\codomain}{\Set{Cod}}
\DeclareMathOperator{\kernel}{\Pseudocode{kernel}}
\DeclareMathOperator{\range}{\Pseudocode{range}}
\DeclareMathOperator{\linearspan}{\Linear{span}} 
\DeclareMathOperator{\affinespan}{\Affine{aspan}}
\DeclareMathOperator{\Tangent}{\Pseudocode{tangent}}
\DeclareMathOperator{\TangentSpace}{\Space{Tan}}
\DeclareMathOperator{\convexspan}{\Affine{hull}} 
\DeclareMathOperator{\linearCombination}{\Linear{linear\mathhyphen combination}} 
\DeclareMathOperator{\affineCombination}{\Affine{affine\mathhyphen combination}} 
\DeclareMathOperator{\convexCombination}{\Affine{convex\mathhyphen combination}} 
\DeclareMathOperator{\volume}{\Pseudocode{volume}}

\NewDocumentCommand{\SetSpec}{m m}{\left\{ #1\,|\,#2 \right\}}
\NewDocumentCommand{\PowerSet}{m}{\wp \left( #1 \right)}
\DeclareMathOperator{\Boundary}{\partial}

\NewDocumentCommand{\Vertex}{m}{\toGreek{#1}}
\NewDocumentCommand{\Edge}{m}{\toGreek{#1}}
\NewDocumentCommand{\Face}{m}{\toGreek{#1}}
\NewDocumentCommand{\Simplex}{m}{\toGreek{#1}}
\NewDocumentCommand{\Facet}{m}{\toGreek{#1}}
\NewDocumentCommand{\SimplicialComplex}{m}{\symscr{#1}}
\NewDocumentCommand{\Mesh}{m}{\mathcal{#1}}

\NewDocumentCommand{\Identity}{}{\Pseudocode{I}}

\NewDocumentCommand{\union}{}{\cup}
\NewDocumentCommand{\intersection}{}{\cap}
\NewDocumentCommand{\Union}{}{\bigcup}
\NewDocumentCommand{\Intersection}{}{\bigcap}

\DeclareMathOperator{\Transpose}{\Pseudocode{transpose}}
\DeclareMathOperator{\LTL}{\Pseudocode{LTL}}   % a-transpose-a
\DeclareMathOperator{\Inverse}{\Pseudocode{inverse}}
\DeclareMathOperator{\Pseudoinverse}{\Pseudocode{pseudoinverse}}

\DeclareMathOperator{\dimension}{\Pseudocode{dim}}
%\DeclareMathOperator*{\Projection}{\Pi} % doesn't work
\NewDocumentCommand{\Projection}{}{\Pi}


% derivative operators
\NewDocumentCommand{\plDerivativeA}{o}
 {{\Vector{D}}\IfValueT{#1}{_{#1}}}
% Looks better w/out extra space from \operatorname
% {\operatorname{\Vector{D}}\IfValueT{#1}{_{#1}}}
\NewDocumentCommand{\plDerivativeB}{o m o}
  {\plDerivativeA[#1]{#2}{\IfValueT{#3}{_{\mid_{#3}}}}}
\NewDocumentCommand{\Derivative}{o m o o}
 {\plDerivativeB[#1]{#2}[#3]\IfValueT{#4}{({#4})}}

\NewDocumentCommand{\plGradientA}{o}
 {\symsfup{\nabla}\IfValueT{#1}{_{#1}}}
\NewDocumentCommand{\plGradientB}{o m o}
  {\plGradientA[#1]{#2}{\IfValueT{#3}{_{\mid_{#3}}}}}
\NewDocumentCommand{\Gradient}{o m o o}
 {\plGradientB[#1]{#2}[#3]\IfValueT{#4}{({#4})}}

\NewDocumentCommand{\Partial}{m m o}
{\symsfup{\partial}_{#1}{#2}{\IfValueT{#3}{_{\mid_{#3}}}}}
% Looks better w/out extra space from \operatorname
% {\operatorname{\partial}_{#1}{#2}{\IfValueT{#3}{_{\mid_{#3}}}}}

\NewDocumentCommand{\Edges}{}{\Set{E}}
\NewDocumentCommand{\Faces}{}{\Set{F}}
\NewDocumentCommand{\Normal}{m}{\Vector{#1}}
\NewDocumentCommand{\DNormal}{m}{\delta\Normal{#1}} % change in normal
\NewDocumentCommand{\NormalDot}{m}{\Normal{#1}^\bullet} % dot product of adjacent normals

\DeclareMathOperator*{\argmin}{argmin}
\DeclareMathOperator*{\argmax}{argmax}
\DeclareMathOperator{\card}{card}
\DeclareMathOperator{\sign}{sign}
\DeclareMathOperator{\defeq}
{\overset{\underset{\mathrm{def}}{}}{=}}
%\DeclareMathOperator*{\cdf}{cdf}
%\DeclareMathOperator*{\quantile}{quantile}

\NewDocumentCommand {\bigforall} {}
{\mbox{\Large $\mathsurround0pt\forall$}} 

% https://tex.stackexchange.com/questions/14071/how-can-i-increase-the-line-spacing-in-a-matrix
\renewcommand*\env@matrix[1][\arraystretch]{%
  \edef\arraystretch{#1}%
  \hskip -\arraycolsep
  \let\@ifnextchar\new@ifnextchar
  \array{*\c@MaxMatrixCols c}}

% https://tex.stackexchange.com/questions/42726/align-but-show-one-equation-number-at-the-end/42728#42728
\NewDocumentCommand{\numberthis}{}
  {\addtocounter{equation}{1}\tag{\theequation}}
%-----------------------------------------------------------------
\ifundef{\thechapter}
 {\numberwithin{equation}{section}}
 {\numberwithin{equation}{chapter}}
%-----------------------------------------------------------------
% glossary
%-----------------------------------------------------------------
\RequirePackage[
xindy,
toc=false,
style=alttreehypergroup,
nolong,
nosuper,
numberedsection=nolabel,]
{glossaries}[2020/03/19]

% control whether glossary is printed or not; default false.
% needs to be set true soon after this file (plHead) is loaded.
% TODO: what about custom, multiple glossaries?
\newtoggle{printglossary}
\togglefalse{printglossary}

% TODO: redefine glossary commands? so that glossaary doesn't 
% have to be loaded if it isn't printed? Or have it work more like 
% bib files?

%-----------------------------------------------------------------
% bibliography
%-----------------------------------------------------------------
\RequirePackage[
bibencoding=utf8,
backend=biber, 
citestyle=numeric-comp, 
bibstyle=numeric,
%bibstyle=verbose,
%entrykey=false,
labelnumber=true,
sortcites=true,
maxnames=1000,
maxitems=1000,
block=nbpar,
abbreviate=false,
seconds=true,
date=iso,
alldates=iso,
datezeros=true,
timezeros=true,
hyperref=true,
isbn=false,
backref=true,
]{biblatex}[2020/08/23]

\renewcommand\mkbibnamefamily[1]{\textsc{#1}}

\DeclareFieldFormat{title}{\textmd{#1}}
\DeclareFieldFormat{citetitle}{\textmd{#1}}
\DeclareFieldFormat{journaltitle}{\textmd{#1}}
\DeclareFieldFormat[article,inbook,incollection,inproceedings,patent,thesis,unpublished,journal]{title}{\textmd{#1}}
\DeclareFieldFormat[article,inbook,incollection,inproceedings,patent,thesis,unpublished,journal]{citetitle}{\textmd{#1}}

\DeclareCiteCommand{\citeAuthorTitle}
  {\boolfalse{citetracker}%
   \boolfalse{pagetracker}%
   \usebibmacro{prenote}}%
  {\ifciteindex{\indexnames{labelname}}{}%
  \printtext[bibhyperref]{%
   \printnames{labelname}%
   \space%
   \printfield[citetitle]{labeltitle}}}%
  {\multicitedelim}%
  {\usebibmacro{postnote}}%

% \DeclareCiteCommand{\citeAuthorTitleYear}{
%    \boolfalse{citetracker}%
%    \boolfalse{pagetracker}%
%    \usebibmacro{prenote}}%
%   {\ifciteindex{\indexnames{labelname}}{}%
%   \printtext[bibhyperref]{%
%    \printnames{labelname}, %
%    \printfield[citetitle]{labeltitle}, %
%    \printfield{year}}}%
%   {\multicitedelim}%
%   {\usebibmacro{postnote}}%

\DeclareCiteCommand{\citeAuthorYear}{
   \boolfalse{citetracker}%
   \boolfalse{pagetracker}%
   \usebibmacro{prenote}}%
  {\ifciteindex{\indexnames{labelname}}{}%
  \printtext[bibhyperref]{%
   \printnames{labelname}%
   \space%
   (\printfield{year})}}%
  {\multicitedelim}%
  {\usebibmacro{postnote}}%

\DeclareCiteCommand{\citeAuthorYearTitle}{
   \boolfalse{citetracker}%
   \boolfalse{pagetracker}%
   \usebibmacro{prenote}}%
  {\ifciteindex{\indexnames{labelname}}{}%
  \printtext[bibhyperref]{%
   \printnames{labelname}%
   \space%
   (\printfield{year})%
   \space%
   \printfield[citetitle]{labeltitle}%
   }}%
  {\multicitedelim}%
  {\usebibmacro{postnote}}%

% \DeclareCiteCommand{\citeAuthor}
%   {\boolfalse{citetracker}%
%    \boolfalse{pagetracker}%
%    \usebibmacro{prenote}}%
%   {\ifciteindex{\indexnames{labelname}}{}%
%    \printtext[bibhyperref]{\printnames{labelname}}}%
%   {\multicitedelim}%
%   {\usebibmacro{postnote}}

\DeclareCiteCommand{\citeTitle}
  {\boolfalse{citetracker}%
   \boolfalse{pagetracker}%
   \usebibmacro{prenote}}%
  {\ifciteindex{\indexfield{indextitle}}{}%
   \printtext[bibhyperref]{\printnames{labelname}}}%
  {\multicitedelim}
  {\usebibmacro{postnote}}

% control whether bibliography is printed or not; default true
\newtoggle{printbibliography}
\toggletrue{printbibliography}

% universal bibliography
% ought to be on the search path if PalisadesLakes.sty is

\addbibresource{PalisadesLakes.bib}

%-----------------------------------------------------------------
% index
%-----------------------------------------------------------------
\RequirePackage{imakeidx}[2016/10/15]
\newcommand*{\ding}[2][\dingentry]{%
  \def\dingentry{#2}\emph{#2}\index{#1}}

\indexsetup{level=\nosection,noclearpage=true}
\makeindex

% control whether index is printed or not; default false
\newtoggle{printindex}
\togglefalse{printindex}
%-----------------------------------------------------------------
% titles
%-----------------------------------------------------------------
\RequirePackage{titling}[2009/09/04]
%\newfontfamily\titlefont[Scale=MatchUppercase]{Gill Sans MT}
%\renewcommand{\maketitlehooka}{\titlefont}
\pretitle{\begin{flushleft}\Huge\mdseries\scshape}
\posttitle{\par\end{flushleft}\vskip 0.25em}
\preauthor{\begin{flushleft}\scshape\mdseries}
\postauthor{\par\end{flushleft}}
\predate{\begin{flushleft}\scshape\mdseries}
\postdate{\par\end{flushleft}}
\setlength{\droptitle}{-80pt}
%-----------------------------------------------------------------
% Sectioning
%-----------------------------------------------------------------
% used to disable automatic section generation by imakeidx, etc.
\def\nosection#1{}
%-----------------------------------------------------------------
% section title formatting
%-----------------------------------------------------------------
% TODO: find some alternative to titletoc (and maybe titlesec).
%   
%  * Documentation is opaque, with almost no examples.
%  * Default layout isn't implemented with the user api, so next 
%      to impossible to start from the default layout and modify.
%  * No apparant logical basis for parameter values, requiring 
%      painful trial and error.
%  * Parameter settings across different section levels 
%      seem to interfere with one another; 
%      changing one seems to require updating others to match.
%  * Recomendation is to use absloute size values, which means
%      the wqhole thing has to be redone if the font changes.
% Possibilites:
%   (1) \tcblistof --- seems to get things right without fuss.

  
\RequirePackage[sc,bf,medium,compact,nobottomtitles*,noindentafter]
  {titlesec}[2019/10/16]
%\RequirePackage[titletoc]{appendix}[2020/02/08]
%\RequirePackage{appendix}[2020/02/08]

% TODO: better handling of part/chapter/section as highest level.
% TODO: consistent font size across sections and other chunks
% TODO: spacing should be relative to font size
\setcounter{secnumdepth}{7}
%-----------------------------------------------------------------
\titleformat{\part}[hang]{%
\huge\mdseries\scshape}{\thepart}{0.5em}{}%
%-----------------------------------------------------------------
\titleformat{\chapter}[hang]{%
\LARGE\mdseries\scshape}{\thechapter}{0.5em}{}%
%-----------------------------------------------------------------
\titleformat{\section}[hang]{%
\Large\mdseries\scshape}{\thesection}{0.5em}{}%

\titlespacing\section{0pt}%
{16pt plus 16pt minus 2pt}%
{5pt plus 5pt minus 2pt}%
%-----------------------------------------------------------------
\titleformat{\subsection}[hang]{\large\mdseries\scshape}%
{\thesubsection}{0.5em}{}%

\titlespacing\subsection{0pt}%
{14pt plus 14pt minus 2pt}%
{5pt plus 5pt minus 2pt}%
%-----------------------------------------------------------------
\titleformat{\subsubsection}[hang]{\large\mdseries\scshape}%
{\thesubsubsection}{0.5em}{}%
\titlespacing\subsubsection{0pt}%
{12pt plus 12pt minus 2pt}%
{5pt plus 5pt minus 2pt}%
%-----------------------------------------------------------------
\titleformat{\paragraph}[hang]{\normalsize\mdseries\scshape}%
{\theparagraph}{0.5em}{}%

\titlespacing\paragraph{0pt}%
{12pt plus 12pt minus 2pt}%
{5pt plus 5pt minus 2pt}%
%-----------------------------------------------------------------
\titleformat{\subparagraph}[hang]{\normalsize\mdseries\scshape}%
{\thesubparagraph}{0.5em}{}%

\titlespacing\subparagraph{0pt}%
{12pt plus 12pt minus 2pt}%
{5pt plus 5pt minus 2pt}%
%-----------------------------------------------------------------
% page styles
%-----------------------------------------------------------------
% TODO: \ifthechapter, etc., to handle articles
% also, as is doesn't use the section starting the page,
% but rather the one ending the page, which seems strange.
\renewpagestyle{plain}{
\sethead[][\scshape\thesection\ \sectiontitle][] % even
{} {\scshape\thesection\ \sectiontitle} {} % odd
\setfoot[][\thepage][] % even
{}{\thepage}{} % odd
}
\pagestyle{plain}

% \renewpagestyle{empty}{
% \sethead[][][] % even
% {} {} {}% odd
% }
%-----------------------------------------------------------------
% tables of contents
% TODO: put everything in detailed table of of contents,
% vs lists of % figures, listings, theorems, etc?
% and: put everything in one toc file!
% and: remove need for morewrites package
%-----------------------------------------------------------------
%\RequirePackage{etoc}[2020/05/15]
%-----------------------------------------------------------------
% TODO: what was this for?
% \ifundef{\thechapter}
% {
% \let\oldl@section\l@section
% \def\l@section#1#2{\oldl@section{#1}{\textrm{#2}}}
% \let\old@dottedcontentsline\@dottedtocline
% \def\@dottedtocline#1#2#3#4#5{%
% \old@dottedcontentsline{#1}{#2}{#3}{#4}{{\textrm{#5}}}}
% }
% {
% \let\oldl@chapter\l@chapter
% \def\l@chapter#1#2{\oldl@chapter{#1}{\textrm{#2}}}
% \let\old@dottedcontentsline\@dottedtocline
% \def\@dottedtocline#1#2#3#4#5{%
% \old@dottedcontentsline{#1}{#2}{#3}{#4}{{\textrm{#5}}}}
% }
%-----------------------------------------------------------------
% standard toc
%-----------------------------------------------------------------
% TODO: get toc fonts from titlesec \titleformats
% match shape and series and, ideally, relative size

\NewDocumentCommand{\PalisadesLakesTableOfContents}{m}{
\begingroup
\let\onecolumn\twocolumn
\scshape
%\renewcommand{\contentsname}{Chapters/sections}
\setcounter{tocdepth}{#1}
\tableofcontents
\endgroup
}

%-----------------------------------------------------------------
% TODO: try tocstyle?
%-----------------------------------------------------------------

%-----------------------------------------------------------------
% titletoc --- a complete mess
% documentation is completly opaque, almost no examples.
% default layout in m,urky code, essentially impossible
% to reproduce via user api.
% parameter settings have to be determined by trial and error,
% no longer work if the font changes (though I did manage to get
% apprximately what I want with \settowidth{}).
% after 2 days of fiddling, still quite ugly.
% not worth it just to have multiple tocs, which is probably not a
% good idea anyway. 
%-----------------------------------------------------------------
% \RequirePackage{titletoc}[2019/10/16]
% 
% % \NewDocumentCommand{\TitleContents}{m m m}{%
% % \dottedcontents{#1}%
% % [#2]%
% % {\contentsmargin[10ex]{0em}\mdseries\scshape}%
% % {#3}%
% % {1ex}%
% % }
% 
% \NewDocumentCommand{\TitleContents}{m m m}{%
% \titlecontents{#1}%
% [#2]%
% {\contentsmargin[12ex]{0em}\mdseries\scshape}%
% {\contentslabel{#3}}%
% {\hspace*{-#3}}%
% {{\normalfont\titlerule*[0.5em]{.}\contentspage}}%
% }%
% 
% \newlength{\TwoDigits}
% \settowidth{\TwoDigits}{221}
% \newlength{\TwoDigitsDot}
% \settowidth{\TwoDigitsDot}{221}
% 
% \TitleContents{chapter}
% {0pt}
% {\TwoDigits}
% \TitleContents{section}
% {\TwoDigits}
% {\dimexpr(\TwoDigits +  \TwoDigitsDot)}
% \TitleContents{subsection}   
% {\dimexpr(\TwoDigits +  \TwoDigitsDot)}
% {\dimexpr(\TwoDigits + 2\TwoDigitsDot)}
% \TitleContents{subsubsection}
% {\dimexpr(\TwoDigits + 2\TwoDigitsDot)}
% {\dimexpr(\TwoDigits + 3\TwoDigitsDot)}
% \TitleContents{paragraph}    
% {\dimexpr(\TwoDigits + 3\TwoDigitsDot)}
% {\dimexpr(\TwoDigits + 4\TwoDigitsDot)}
% \TitleContents{subparagraph} 
% {\dimexpr(\TwoDigits + 4\TwoDigitsDot)}
% {\dimexpr(\TwoDigits + 5\TwoDigitsDot)}
% 
% \NewDocumentCommand{\PalisadesLakesTableOfContents}{m}{
% \startcontents[contents]
% \begin{plSection}{Overview}
% \printcontents[contents]{1}{0}[0]{}
% \end{plSection}%{Overview}
% \newpage
% \begin{plSection}{Outline}
% \printcontents[contents]{1}{0}[#1]{}
% \end{plSection}%{Outline}
% \newpage
% }

%-----------------------------------------------------------------
% nested/scoped sections
%-----------------------------------------------------------------
% TODO: better handling of part/chapter/section as highest level.
% TODO: section levels should be numbers, starting 0 or 1 for
%  top/outermost, with no hard bound on depth.
%  'Part', 'chapter', 'section', etc., should be defined via 
%  a list of strings plus code to handle case of section depth
%  exceeding number of names. One options is to just call 
%  everything a 'Section' with numbering indicating depth.
%
% TODO: put some of this in class definitions?
%
% I had been using \texttt{coseoul} 
% (\url{https://ctan.org/pkg/coseoul}
% to manage section levels across multiple, reused section files,
% where a given input file may be a chapter in one case,
% a subsection in another, etc., depending on the context 
% in which it is input.
% What I want is sections defined with something  like
% \verb!\begin{section}! \ldots \verb!\end{section}!,
% where the level of the section dependes on the level of nesting.
%
% Will Robertson's unfinished \texttt{newsec} package
% (\url{https://github.com/wspr/will2e/tree/master/newsec})
% provdes (a beginning for) this as his \texttt{sect} environment:
% ``While more verbose, this method is easy to use 
% (nesting is a logical mapping to `subsection') and provides 
% a couple of other small advantages 
% (including better scoping for bookmarks 
% and easy support for code folding in a text editor).''
% 
% Example:
% \begin{plSection}{Beginning}
% ...
%   \begin{plSection}{Introduction}
%   ...
%     \begin{plSection}{Outline}
%     ...
%     \end{plSection}
%   \end{plSection}
%   \begin{plSection}{Body}
%   ...
%   \end{plSection}
% \end{plSection}
%-----------------------------------------------------------------
% define starred versions of section commands 
% for starred environments.
% TODO: is this a good idea; can we do without?

\newif\if@ss@in@sect@
\newcommand\ss@starenv[1]{%
  \newenvironment{#1*}{\@nameuse{#1}*}{\par}}
\ss@starenv{part}
\ss@starenv{chapter}
\ss@starenv{section}
\ss@starenv{subsection}
\ss@starenv{subsubsection}
\ss@starenv{paragraph}
\ss@starenv{subparagraph}
\newcount\ss@sec
\def\ss@reset{\let\ss@in\@empty}
\ss@reset

\newenvironment{plSection}
 {\if@ss@in@sect@
    \advance\ss@sec\@ne
  \else
    \@ss@in@sect@true
  \fi
  \ss@rel}
 {\par}

\newenvironment{plSection*}{\plSection*}{\endplSection*}
\providecommand\g@let@co[2]{%
  \expandafter\global\expandafter\let\csname #1\expandafter\endcsname#2}
\providecommand\string@o{\expandafter\string}
\def\ss@levels#1{%
  \begingroup
  \escapechar\m@ne
  \@tempcnta\z@
  \let\ss@case@levels\@empty
  \@tfor\@ii:=#1\do{%
    \g@let@co{ss@\string@o\@ii}{\@ii}%
    \expandafter\xdef\@ii{%
      \noexpand\ss@sec\number\@tempcnta
      \expandafter\noexpand\csname ss@\string@o\@ii\endcsname}%
    \expandafter\ss@addto@case\expandafter{\csname ss@\string@o\@ii\endcsname}%
    \advance\@tempcnta\@ne}%
  \endgroup}
\def\ss@addto@case#1{%
  \expandafter\ss@addto@case@i\expandafter{\ss@case@levels}{#1}}
\def\ss@addto@case@i#1#2{%
  \gdef\ss@case@levels{#1\ss@in\expandafter#2\or}}

% Clumsy handling of highest level section
% Disable \verb!\part!.
% TODO: option to use \verb!\part!.
% In the meantime, can invoke \verb!\part{Foo}! directly
\ifdefined\thechapter%
  \ss@levels{%
  \chapter\section\subsection\subsubsection\paragraph\subparagraph}%
\else%
  \ss@levels{%
  \section\subsection\subsubsection\paragraph\subparagraph}%
\fi%
\newcommand\ss@rel{%
  \expandafter
  \ifcase\expandafter\ss@sec
    \ss@case@levels
  \else
    \PackageError{pLakes}{No section level \number\ss@sec\space defined.}
      {You'll need to define more section levels to go this high or deep.}%
  \fi}
%-----------------------------------------------------------------
% TODO: can this be replaced with use of plChunks?
\RequirePackage{enumitem}[2019/06/20]
\setlist[description]{font=\scshape\mdseries}
\setlist[itemize]{style=unboxed,itemindent=0cm}
\setlist[enumerate]{style=unboxed,itemindent=0cm}
%-----------------------------------------------------------------
% code and pseudo-code
%-----------------------------------------------------------------
% TODO: no version in package; do we really need this?
\RequirePackage{algpseudocode}
\RequirePackage{algorithm}[2009/08/24]
\RequirePackage{algorithmicx}[2005/04/27]
%-----------------------------------------------------------------
\RequirePackage{listings}[2020/03/24]

\lstset{%
keepspaces=true,%
backgroundcolor={\color{GhostWhite}},
captionpos=b,
%frame=tblr,
}

%-----------------------------------------------------------------
\lstdefinelanguage{clojure}{%
keepspaces=true,%
basicstyle=\clojureFont,
breaklines=false,
mathescape=true,
escapechar=\%,
keywordstyle=\clojureFont\color{Sepia},
morekeywords={
deftest,testing,is,defrecord,
*,*1,*2,*3,*agent*,*allow-unresolved-vars*,*assert*,
*clojure-version*,*command-line-args*,%
*compile-files*,*compile-path*,*e,*err*,*file*,
*flush-on-newline*,*in*,*macro-meta*,%
*math-context*,*ns*,*out*,*print-dup*,*print-length*,
*print-level*,*print-meta*,*print-readably*,%
*read-eval*,*source-path*,*use-context-classloader*,
*warn-on-reflection*,+,-,->,->>,..,
%/,
:else,%
<,<=,=,==,>,>=,@,accessor,aclone,add-classpath,add-watch,
agent,agent-errors,aget,alength,alias,%
all-ns,alter,alter-meta!,alter-var-root,amap,ancestors,
and,apply,areduce,array-map,aset,%
aset-boolean,aset-byte,aset-char,aset-double,aset-float,
aset-int,aset-long,aset-short,assert,%
assoc,assoc!,assoc-in,associative?,atom,await,await-for,
await1,bases,bean,bigdec,bigint,binding,%
bit-and,bit-and-not,bit-clear,bit-flip,bit-not,bit-or,bit-set,
bit-shift-left,bit-shift-right,bit-test,bit-xor,boolean,
boolean-array,booleans,bound-fn,bound-fn*,butlast,byte,
byte-array,%
bytes,cast,char,char-array,char-escape-string,char-name-string,
char?,chars,chunk,chunk-append,%
chunk-buffer,chunk-cons,chunk-first,chunk-next,chunk-rest,
chunked-seq?,class,class?,%
clear-agent-errors,clojure-version,coll?,comment,commute,comp,
comparator,compare,compare-and-set!,%
compile,complement,concat,cond,condp,conj,conj!,cons,constantly,
construct-proxy,contains?,count,%
counted?,create-ns,create-struct,cycle,dec,decimal?,declare,def,
definline,defmacro,defmethod,%
defmulti,defn,defn-,defonce,defprotocol,defstruct,deftype,delay,
delay?,deliver,deref,derive,%
descendants,destructure,disj,disj!,dissoc,dissoc!,distinct,
distinct?,do,do-template,doall,doc,%
dorun,doseq,dosync,dotimes,doto,double,double-array,doubles,drop,
drop-last,drop-while,empty,empty?,%
ensure,enumeration-seq,eval,even?,every?,false,false?,ffirst,
file-seq,filter,finally,find,find-doc,%
find-ns,find-var,first,float,float-array,float?,floats,flush,
fn,fn?,fnext,for,force,format,future,%
future-call,future-cancel,future-cancelled?,future-done?,future?,
gen-class,gen-interface,gensym,%
get,get-in,get-method,get-proxy-class,get-thread-bindings,
get-validator,hash,hash-map,hash-set,%
identical?,identity,if,if-let,if-not,ifn?,import,in-ns,inc,
init-proxy,instance?,int,int-array,%
integer?,interleave,intern,interpose,into,into-array,ints,io!,
isa?,iterate,iterator-seq,juxt,%
key,keys,keyword,keyword?,last,lazy-cat,lazy-seq,let,letfn,
line-seq,list,list*,list?,load,load-file,%
load-reader,load-string,loaded-libs,locking,long,long-array,
longs,loop,macroexpand,macroexpand-1,%
make-array,make-hierarchy,map,map?,mapcat,max,max-key,memfn,
memoize,merge,merge-with,meta,%
method-sig,methods,min,min-key,mod,monitor-enter,monitor-exit,
name,namespace,neg?,new,newline,%
next,nfirst,nil,nil?,nnext,not,not-any?,not-empty,not-every?,
not=,ns,ns-aliases,ns-imports,%
ns-interns,ns-map,ns-name,ns-publics,ns-refers,ns-resolve,
ns-unalias,ns-unmap,nth,nthnext,num,%
number?,odd?,or,parents,partial,partition,pcalls,peek,persistent!,
pmap,pop,pop!,pop-thread-bindings,%
pos?,pr,pr-str,prefer-method,prefers,primitives-classnames,print,
print-ctor,print-doc,print-dup,%
print-method,print-namespace-doc,print-simple,print-special-doc,
print-str,printf,println,println-str,%
prn,prn-str,promise,proxy,proxy-call-with-super,proxy-mappings,
proxy-name,proxy-super,%
push-thread-bindings,pvalues,quot,rand,rand-int,range,ratio?,
rational?,rationalize,re-find,%
re-groups,re-matcher,re-matches,re-pattern,re-seq,read,read-line,
read-string,recur,reduce,ref,%
ref-history-count,ref-max-history,ref-min-history,ref-set,refer,
refer-clojure,reify,%
release-pending-sends,rem,remove,remove-method,remove-ns,
remove-watch,repeat,repeatedly,%
replace,replicate,require,reset!,reset-meta!,resolve,rest,
resultset-seq,reverse,reversible?,%
rseq,rsubseq,second,select-keys,send,send-off,seq,seq?,seque,
sequence,sequential?,set,set!,%
set-validator!,set?,short,short-array,shorts,shutdown-agents,
slurp,some,sort,sort-by,sorted-map,%
sorted-map-by,sorted-set,sorted-set-by,sorted?,
special-form-anchor,special-symbol?,split-at,%
split-with,str,stream?,string?,struct,struct-map,subs,subseq,
subvec,supers,swap!,symbol,symbol?,%
sync,syntax-symbol-anchor,take,take-last,take-nth,take-while,
test,the-ns,throw,time,to-array,%
to-array-2d,trampoline,transient,tree-seq,true,true?,try,type,
unchecked-add,unchecked-dec,%
unchecked-divide,unchecked-inc,unchecked-multiply,
unchecked-negate,unchecked-remainder,%
unchecked-subtract,underive,unquote,unquote-splicing,update-in,
update-proxy,use,val,vals,%
var,var-get,var-set,var?,vary-meta,vec,vector,vector?,when,
when-first,when-let,when-not,%
while,with-bindings,with-bindings*,with-in-str,
with-loading-context,with-local-vars,%
with-meta,with-open,with-out-str,with-precision,xml-seq,zero?,
zipmap
},%
   sensitive,% ???
   alsodigit=-,%
   morecomment=[l];,%
   morestring=[b]"%
  }[keywords,comments,strings]%

%-----------------------------------------------------------------
\lstdefinelanguage{scheme}{%
  morekeywords=[1]{define, define-syntax, define-macro, 
  lambda, define-stream, stream-lambda},
  morekeywords=[2]{begin, call-with-current-continuation, call/cc,
    call-with-input-file, call-with-output-file, case, cond,
    do, else, for-each, if,
    let*, let, let-syntax, letrec, letrec-syntax,
    let-values, let*-values,
    and, or, not, delay, force,
    quasiquote, quote, unquote, unquote-splicing,
    map, fold, syntax, syntax-rules, eval, environment, query },
  morekeywords=[3]{import, export},
  alsodigit=!\$\%&*+-./:<=>?@^_~,
  sensitive=true,
  morecomment=[l]{;},
  morecomment=[s]{\#|}{|\#},
  morestring=[b]",
  breaklines=false,
  mathescape=true,
  escapechar=\%,
  basicstyle=\schemeFont,
  keywordstyle=\schemeFont\color{Sepia},
  commentstyle=\color[rgb]{0.133,0.545,0.133},
  stringstyle={\color[rgb]{0.75,0.49,0.07}},
  upquote=true,
keepspaces=true,%
  %breaklines=true,
  %breakatwhitespace=true,
  %literate=*{`}{{`}}{1},
  showstringspaces=false,
}

%-----------------------------------------------------------------
\lstdefinelanguage{pseudocode}{
  morekeywords=[1]{def,defn, fn, and, or, map, reduce,},
  morekeywords=[2]{cond, do, else, for-each, if, let, eval, apply},
  alsodigit=!\$\%&*+-./:<=>?@^_~,
  sensitive=true,
  breaklines=false,
  mathescape=true,
  escapechar=\%,
  basicstyle=\pseudocodeFont,
  keywordstyle=\pseudocodeFont\color{Sepia},
  commentstyle=\color[rgb]{0.133,0.55,0.133},
  stringstyle={\color[rgb]{0.75,0.5,0.07}},
  columns=fullflexible,
  keepspaces=true,%
 }
%-----------------------------------------------------------------
% cross references / hyperlinks
%-----------------------------------------------------------------
% 'Generally, hyperref should be loaded last,
% though there are some exceptions'
% https://tex.stackexchange.com/questions/22012/hyperref-and-imakeidx-do-not-work-together
%https://tex.stackexchange.com/questions/1863/which-packages-should-be-loaded-after-hyperref-instead-of-before
\RequirePackage[%
unicode=true,
pdfencoding=auto,
psdextra= true,
pdfusetitle,
bookmarks=true,
bookmarksnumbered=false,
bookmarksopen=true,
bookmarksopenlevel=1,
breaklinks=false,
pdfborder={0 0 0},
pdftoolbar=false,
pdffitwindow=true,
backref=false,
naturalnames=true,
colorlinks=true]{hyperref}[2020-05-15]

% can these be options to RequirePackage?
\hypersetup{
unicode=true,
colorlinks=true,
% TODO: should these be left to user settings in the pdf reader?
pdfpagemode=UseOutlines,
pdfpagelayout=SinglePage,
pdfstartview=Fit,
linkcolor=MidnightBlue,
urlcolor=Sepia,
citecolor=citecolor,
}

%\RequirePackage{bookmark}[2020-11-06]
% for upper/lower case references
\RequirePackage[nameinlink,noabbrev]{cleveref}[2018/03/27]
\crefname{paragraph}{section}{sections}
\Crefname{paragraph}{Section}{Sections}
\crefname{subparagraph}{section}{sections}
\Crefname{subparagraph}{Section}{Sections}
% get rid of () in equation refereneces
\creflabelformat{equation}{#2\textup{#1}#3}

%-----------------------------------------------------------------
% plChunk environments using tcolorbox
%-----------------------------------------------------------------
\RequirePackage[breakable,theorems]{tcolorbox}[2020/10/04]

\def\@plChunkTitle#1#2#3{%
  \ifstrempty{#1}%
    {\setbox\z@=\color@hbox{}\color@endbox}%
    {\def\pl@tmp{\textmd{#2}}%
     \ifx\pl@tmp\@empty\relax%
       \setbox\z@=\color@hbox{{\small\textsc{#1}}}\color@endbox%
     \else%  
       \setbox\z@=\hbox{{\small\textsc{#1}}~{\large\textmd{#2}}}%
     \fi}%
  \ifstrempty{#3}%
    {\unhbox\z@}%
    {\ifdim\wd\z@=0pt%
       \textmd{#3}%
     \else%
       {\setbox\z@=\hbox{\unhbox\z@{:\space}}%
        \hangindent\wd\z@%
        \hangafter=1%
        \mbox{\unhbox\z@}{\textmd{#3}}}%
     \fi}}
 
\def\@plChunkLabel#1#2{%
  \notblank{#1}
    {\notblank{#2}{\tcbset{label={#1:#2},}} {}}
    {}}

% TODO: elimintate unnumbered (*) environments?
\newcommand{\@plNewChunk}[5][]{%
  % control whether list of chunks is printed or not; 
  % default false.
  % needs to be set true soon after this file is loaded,
  % most likely in class file that loads this package.
  \newtoggle{#2}
  \togglefalse{#2}

  \newtcolorbox[auto counter,#1]{#2}[3][]{#4,%
    title={\@plChunkTitle{#3}{\thetcbcounter}{##2}},%
    list entry={\hbox{{\small\textsc{#3}}\space}{\large\textmd{\thetcbcounter:\space}}##2},%
%    list entry={\protect\numberline{\thetcbcounter}{\hbox{\textsc{#3}:\space}##2}},%
%    list entry={\protect\numberline{\thetcbcounter}##2},%
    nameref={##2},%
    code={\@plChunkLabel{#5}{##3}},%
    ##1}%
  % Note: cross ref label ignored
  \newtcolorbox[#1,no counter,list inside=]{#2*}[3][]{#4,%
    title={\@plChunkTitle{#3}{}{##2}},%
    ##1}}
    
%-----------------------------------------------------------------
\ExplSyntaxOn
%-----------------------------------------------------------------

%\msg_new:nnn {pl} {insideA} {inside~pl_NewChunkA:nnnnn\\#1\\#2\\#3}

\cs_new:Nn \pl_NewChunkA:nnnnn {
%  \msg_info:nnxxx {pl} {insideA} {#2} {#3} {#5} 
  \@plNewChunk[#1]{#2}{#3}{#4}{#5}}

%\cs_generate_variant:Nn \pl_NewChunkA:nnnnn {xVVnV}
\cs_generate_variant:Nn \pl_NewChunkA:nnnnn {xVVxV}
%=----------------------------------
\msg_new:nnn {pl} {insideB} {inside~pl_NewChunkB:nnn\\#1}

\prop_new:N \l__plNewChunk_prop
\tl_new:N \l__ChunkBackgroundColor_tl
\tl_new:N \l__ChunkHead_tl
\tl_new:N \l__ChunkType_tl
\tl_new:N \l__CapChunkType_tl
\tl_new:N \l__plCapChunkType_tl
\tl_new:N \l__ChunkParent_tl
\tl_new:N \l__ChunkCounter_tl
\tl_new:N \l__Chunkcref_tl
\tl_new:N \l__ChunkCref_tl
\tl_new:N \l__ChunkNumberWithin_tl
\ifundef{\thechapter}
 {\tl_set:Nn \l__ChunkNumberWithin_tl {section}}
 {\tl_set:Nn \l__ChunkNumberWithin_tl {chapter}}

\cs_generate_variant:Nn \text_lowercase:n {V}
\cs_generate_variant:Nn \text_titlecase:n {V}
\cs_generate_variant:Nn \text_titlecase_first:n {V}
\cs_generate_variant:Nn \msg_info:nnn {nnV}

\cs_new:Nn \pl_NewChunkB:nnn {
%  \msg_info:nnx {pl} {insideB} {#3}
  \prop_set_from_keyval:Nn \l__plNewChunk_prop {#3}
  \prop_get:NnN \l__plNewChunk_prop 
    {ChunkType} 
    \l__ChunkType_tl

  \tl_set:Nx \l__CapChunkType_tl 
    {\text_titlecase_first:V \l__ChunkType_tl}
  \tl_set:Nx \l__plCapChunkType_tl 
    {pl\l__CapChunkType_tl}

  \prop_get:NnN \l__plNewChunk_prop
    {ChunkHead}
    \l__ChunkHead_tl
  \tl_if_eq:NNTF \q_no_value \l__ChunkHead_tl
    {\tl_set:NV \l__ChunkHead_tl \l__CapChunkType_tl}
    {}

  \tl_set:Nx \l__Chunkcref_tl
    {\text_lowercase:V \l__ChunkHead_tl}
    
  \tl_set:Nx \l__ChunkCref_tl
    {\text_titlecase:V \l__ChunkHead_tl}
    
  \prop_get:NnN \l__plNewChunk_prop 
    {ChunkBackgroundColor} 
    \l__ChunkBackgroundColor_tl
  \tl_if_eq:NNTF \q_no_value \l__ChunkBackgroundColor_tl
    {\tl_set:Nn \l__ChunkBackgroundColor_tl {GhostWhite}}
    {\tl_set:NV \l__ChunkBackgroundColor_tl \l__ChunkBackgroundColor_tl}

  \prop_get:NnN \l__plNewChunk_prop
    {ChunkParent}
    \l__ChunkParent_tl
  \tl_if_eq:NNTF \q_no_value \l__ChunkParent_tl
    {\tl_set:NV \l__ChunkParent_tl \l__plCapChunkType_tl
     \tl_set:Nn \l__ChunkCounter_tl {auto~counter}}
    {\tl_set:NV \l__ChunkParent_tl \l__ChunkParent_tl
     \tl_set:Nn \l__ChunkCounter_tl 
     {use~counter~from={\l__ChunkParent_tl}}}

 %\msg_info:nnV {pl} {insideB} \l__ChunkParent_tl

  \pl_NewChunkA:xVVxV 
    { number~within=\l__ChunkNumberWithin_tl,
      crefname={\l__Chunkcref_tl}{\l__Chunkcref_tl s},
      Crefname={\l__ChunkCref_tl}{\l__ChunkCref_tl s},
      list~inside={\l__ChunkParent_tl},
      \l__ChunkCounter_tl,
      #1,}
    \l__plCapChunkType_tl
    \l__ChunkHead_tl
    { oversize,
      breakable,
      sharp~corners,
      width=\linewidth,
      text~width=\linewidth,
      coltitle=black,
      coltext=black,
      colback=\l__ChunkBackgroundColor_tl,
      colframe=\l__ChunkBackgroundColor_tl,
      colbacktitle=\l__ChunkBackgroundColor_tl,
      titlerule=0mm,
      #2}
    \l__ChunkType_tl
  }
%-----------------------------------------------------------------
\NewDocumentCommand {\plNewChunk} {O{} O{} m} {
 \pl_NewChunkB:nnn {#1}{#2}{#3} }
%-----------------------------------------------------------------
\colorlet{quoteBackground}{Tan!08!white}
\plNewChunk[][]
{ChunkType=quote,
 %ChunkHead={},
 ChunkBackgroundColor=quoteBackground}

\colorlet{dataBackground}{gray!3!white}
\plNewChunk[][]
{ChunkType=data,
 ChunkBackgroundColor=dataBackground}

\plNewChunk[][]
{ChunkType=plot,
  ChunkBackgroundColor=dataBackground,
  ChunkParent=plData,
  }

\plNewChunk[][]
{ChunkType=table,
  ChunkBackgroundColor=dataBackground,
  ChunkParent=plData,
  }

\colorlet{codeBackground}{LightCyan1!20!white}
\plNewChunk[][]
{ChunkType=code,
 ChunkBackgroundColor=code}


\plNewChunk[][]
{ChunkType=algorithm,
 ChunkBackgroundColor=codeBackground,
 ChunkParent=plCode,
 }

\plNewChunk[][]
{ChunkType=listing,
 ChunkHead={Code},
 ChunkBackgroundColor=codeBackground,
 ChunkParent=plCode,
 }
\lstset{backgroundcolor=\color{codeBackground}}

\plNewChunk[][]
{ChunkType=screen,
 ChunkBackgroundColor=codeBackground,
 ChunkParent=plCode,
 ChunkHead={Screen~shot},
 }

\colorlet{noteBackground}{AliceBlue!30!white}
\plNewChunk[][]
{ChunkType=note,
 ChunkBackgroundColor=noteBackground}%

\colorlet{exerciseBackground}{Lavender!20!white}
\plNewChunk[][]
{ChunkType=exercise,
 ChunkBackgroundColor=exerciseBackground}

\colorlet{mathBackground}{AntiqueWhite!20!white}
\plNewChunk[][]
{ChunkType=math,
 ChunkBackgroundColor=mathBackground}

\plNewChunk[][]
{ChunkType=definition,
 ChunkBackgroundColor=mathBackground,
 ChunkParent=plMath,
 }

\plNewChunk[][]
{ChunkType=example,
 ChunkBackgroundColor=mathBackground,
 ChunkParent=plMath,
 }

\plNewChunk[][]
{ChunkType=axiom,
 ChunkBackgroundColor=mathBackground,
 ChunkParent=plMath,
 }

\plNewChunk[][]
{ChunkType=axiomSchema,
 ChunkHead={Axiom~Schema},
 ChunkBackgroundColor=mathBackground,
 ChunkParent=plMath,
 }
 
\plNewChunk[][]
{ChunkType=theorem,
 ChunkBackgroundColor=mathBackground,
 ChunkParent=plMath,
 }%

\plNewChunk[][]
{ChunkType=lemma,
 ChunkBackgroundColor=mathBackground,
 ChunkParent=plMath,
 }%

\plNewChunk[][]
{ChunkType=corollary,
 ChunkBackgroundColor=mathBackground,
 ChunkParent=plMath,
 }%
 
 \plNewChunk[][breakable=false]
 {ChunkType=diagram,
  ChunkBackgroundColor=mathBackground,
  ChunkParent=plMath,
  }
\tikzcdset{background~color=mathBackground}
 
%-----------------------------------------------------------------
\ExplSyntaxOff
%-----------------------------------------------------------------
\newtoggle{AppendicesStarted}
\togglefalse{AppendicesStarted}

\NewDocumentCommand{\BeginAppendices}{}{
\iftoggle{AppendicesStarted}{}{%
  \ifdefined\thechapter
    \setcounter{chapter}{0}
    \renewcommand{\thechapter}{\Alph{chapter}}
  \else
    \setcounter{section}{0}
    \renewcommand{\thesection}{\Alph{section}}
  \fi
\toggletrue{AppendicesStarted}
}}

% TODO: \EndAppendices, \RestartAppendices, \ContinueAppendices?
%-----------------------------------------------------------------
% standard document endings
% TODO: move to document classes?
%-----------------------------------------------------------------

\NewDocumentCommand {\FinishArticle} {} {
\BeginAppendices
\iftoggle{printbibliography}{
\begin{plSection}{References}
\printbibliography[heading=none,]
\end{plSection}%{References}
}
{}

\iftoggle{printindex}{%
\begin{plSection}{Index}
\printindex
\end{plSection}%{Index}
}
{}
}

\NewDocumentCommand {\FinishReport} {} {
\BeginAppendices
\iftoggle{printglossary}{%
% \newglossarystyle{mystyle}{%
%  \setglossarystyle{altlist}%
%  \renewcommand*{\glossentry}[2]{%
%  \item[\glsentryitem{##1}\glstarget{##1}{\glossentryname{##1}}]
%  \ifglshaslong{##1}%
%    { (\abbrtype{##1}: \glsentrylong{##1})\space}{}%
%  \glossentrydesc{##1}\glspostdescription\space ##2}% 
% }
%
% prevent \printglossary from defining its own section
\renewcommand{\glossarysection}[2][]{}%
%
\begin{plSection}{Glossary}%
\printglossary%
\end{plSection}%{Glossary}
}
{}
\FinishArticle}


\NewDocumentCommand {\FinishBook} {} {
\BeginAppendices
\glsaddallunused
\iftoggle{plData} {
\begin{plSection}{Plots, Tables, etc.}
\tcblistof[\nosection]{plData}{}
\end{plSection}%{Figures}
}{}
\iftoggle{plCode} {
\begin{plSection}{Algorithms, Code, Pseudo-code, etc.}
\tcblistof[\nosection]{plCode}{}
\end{plSection}%{Algorithms}
}{}
\iftoggle{plMath} {
  \begin{plSection}{Definitions, Theorems, etc.}
  \tcblistof[\nosection]{plMath}{}
  \end{plSection}%{Definitions}
  }{}
\iftoggle{plNote} {
\begin{plSection}{Notes}
\tcblistof[\nosection]{plNote}{}
\end{plSection}%{Notes}
}{}
\iftoggle{plExercise} {
\begin{plSection}{Exercises}
\tcblistof[\nosection]{plExercise}{}
\end{plSection}%{Exercises}
}{}
\iftoggle{plQuote} {
\begin{plSection}{Quotes}
\tcblistof[\nosection]{plQuote}{}
\end{plSection}%{Quotes}
}{}

\FinishReport
}
%-----------------------------------------------------------------
\RequirePackage{microtype}[2021/03/14]
%-----------------------------------------------------------------
